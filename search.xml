<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>二〇二一拼音漫遊</title>
    <url>/sulfurandcu.io/clnyhr2mh001m10rq3qr434d7.html</url>
    <content><![CDATA[<p><img src="/sulfurandcu.io/clnyhr2mh001m10rq3qr434d7/2021.A.bopomofo.Odyssey.png" alt="圖片加載失敗"></p>
]]></content>
      <categories>
        <category>語言文字</category>
      </categories>
      <tags>
        <tag>漢語拼音</tag>
        <tag>注音符號</tag>
      </tags>
  </entry>
  <entry>
    <title>黃金時代隨風而逝</title>
    <url>/sulfurandcu.io/clnyhr2mh001p10rq8w62htd4.html</url>
    <content><![CDATA[<p><img src="/sulfurandcu.io/clnyhr2mh001p10rq8w62htd4/cast-away-illusions.jpg"></p>
<center><a href="https://dribbble.com/shots/16430646-CAST-AWAY-ILLUSIONS-PREPARE-FOR-STRUGGLE">囗囗囗囗　囗囗囗囗</a></center>

<br>

<center>
黃金時代<br>
1996 1997 1998 1999 2000<br>
2001 2002 2003 2004 2005<br>
2006 2007 2008 2009 2010<br>
2011 2012 2013 2014 2015<br>
2016 2017 2018 2019 2020<br>
</center>
<br>

<span id="more"></span>

<center>
白銀時代<br>
2021 2022 2023 2024 2025<br>
2026 2027 2028 2029 2030<br>
2031 2032 2033 2034 2035<br>
2036 2037 2038 2039 2040<br>
</center>
<br>
<center>
青銅時代<br>
2041 2042 2043 2044 2045<br>
2046 2047 2048 2049 2050<br>
2051 2052 2053 2054 2055<br>
2056 2057 2058 2059 2060<br>
</center>
<br>
<center>
黑鐵時代<br>
2061 2062 2063 2064 2065<br>
2066 2067 2068 2069 2070<br>
2071 2072 2073 2074 2075<br>
2076 2077 2078 2079 2080<br>
</center>
<br>
]]></content>
      <categories>
        <category>白銀時代</category>
      </categories>
  </entry>
  <entry>
    <title>張三同志姓名字號</title>
    <url>/sulfurandcu.io/clnyhr2mi001u10rq4248hyf0.html</url>
    <content><![CDATA[<center>張三，姓張名弎，字斯岸，號弋山道人，早年曾任刑部侍郎，人稱司案先生。</center>
<br>
]]></content>
      <categories>
        <category>白銀時代</category>
      </categories>
  </entry>
  <entry>
    <title>搭建一個基於 docsify 的文檔系統</title>
    <url>/sulfurandcu.io/clnybw9vu001xbkrq6tmo3euo.html</url>
    <content><![CDATA[<p><img src="/sulfurandcu.io/clnybw9vu001xbkrq6tmo3euo/architecture.png" alt="圖片加載失敗"></p>
<center>・文檔系統架構圖・</center>

<span id="more"></span>

<br>

<div class="note info"><p><code>#web</code> <a href="http://127.0.0.1:3000/">http://127.0.0.1:3000</a></p>
</div>

<div class="note info"><p><code>#ssh</code> <a href="mailto:&#108;&#x6f;&#99;&#x61;&#x6c;&#104;&#x6f;&#115;&#x74;&#x40;&#x31;&#50;&#55;&#x2e;&#48;&#x2e;&#x30;&#x2e;&#49;">&#108;&#x6f;&#99;&#x61;&#x6c;&#104;&#x6f;&#115;&#x74;&#x40;&#x31;&#50;&#55;&#x2e;&#48;&#x2e;&#x30;&#x2e;&#49;</a> 📢 Password:password</p>
</div>

<div class="note info"><p><code>#svn</code> <a href="http://svn.sulfurandcu.com/doc">http://svn.sulfurandcu.com/doc</a></p>
</div>


<h2 id="系統架構"><a href="#系統架構" class="headerlink" title="系統架構"></a>系統架構</h2><p>該系統由「一個代碼庫」「若干開發者」和「一臺服務器」組成。</p>
<h3 id="代碼庫"><a href="#代碼庫" class="headerlink" title="代碼庫"></a>代碼庫</h3><p>代碼庫（SVN）中有一份文檔系統的源碼，裏面放着文檔系統的配置文件和各個項目的文檔文件。</p>
<h3 id="開發者"><a href="#開發者" class="headerlink" title="開發者"></a>開發者</h3><p>開發者可以將 SVN 中的文檔系統源碼 checkout 至本地進行編輯、預覽。修改完畢後再提交回去。</p>
<h3 id="服務器"><a href="#服務器" class="headerlink" title="服務器"></a>服務器</h3><p>服務器中也有一份從 SVN 中 checkout 出來的文檔系統源碼，這些內容被一個叫做文檔網站生成器的軟件動態轉換成網頁在 3000 端口以 HTTP 的形式對外提供訪問。這樣我們就可以通過瀏覽器以輸入 IP 地址加端口的形式訪問該文檔系統。另外該服務器上還運行着一個週期任務，這個任務每隔 15 分鐘（準確地說是在00分、15分、30分、45分的時候）<strong>從 SVN 服務器中</strong>更新一次文檔系統源碼。這樣就實現了文檔系統的自動更新。</p>
<h2 id="使用說明"><a href="#使用說明" class="headerlink" title="使用說明"></a>使用說明</h2><h3 id="第一步：搭建環境"><a href="#第一步：搭建環境" class="headerlink" title="第一步：搭建環境"></a>第一步：搭建環境</h3><p>➀ 安裝「node.js」（一個基於 Chrome V8 引擎 的 JavaScript 運行時環境）</p>
<p><img src="/sulfurandcu.io/clnybw9vu001xbkrq6tmo3euo/nodejs.png" alt="圖片加載失敗"></p>
<center>
<a href="https://nodejs.org/" target="_blank">https://nodejs.org/</a>
</center><br>

<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="/sulfurandcu.io/clnybw9vu001xbkrq6tmo3euo/nodejs.install.1.png" alt="圖片加載失敗"></div><div class="group-picture-column"><img src="/sulfurandcu.io/clnybw9vu001xbkrq6tmo3euo/nodejs.install.2.png" alt="圖片加載失敗"></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="/sulfurandcu.io/clnybw9vu001xbkrq6tmo3euo/nodejs.install.3.png" alt="圖片加載失敗"></div><div class="group-picture-column"><img src="/sulfurandcu.io/clnybw9vu001xbkrq6tmo3euo/nodejs.install.4.png" alt="圖片加載失敗"></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="/sulfurandcu.io/clnybw9vu001xbkrq6tmo3euo/nodejs.install.5.png" alt="圖片加載失敗"></div><div class="group-picture-column"><img src="/sulfurandcu.io/clnybw9vu001xbkrq6tmo3euo/nodejs.install.6.png" alt="圖片加載失敗"></div></div></div>

<p>➁ 安裝「docsify」（一個使用 JavaScript 編寫的文檔網站生成器）</p>
<p><img src="/sulfurandcu.io/clnybw9vu001xbkrq6tmo3euo/docsify.png" alt="圖片加載失敗"></p>
<center>
<a href="https://docsify.js.org/" target="_blank">https://docsify.js.org/</a>
</center><br>

<p><img src="/sulfurandcu.io/clnybw9vu001xbkrq6tmo3euo/docsify.install.png" alt="圖片加載失敗"></p>
<center>
npm i -g docsify-cli
</center>

<div class="note warning"><p>安裝完 node.js 之後就可以使用 npm 指令安裝 docsify-cli 了</p>
</div>

<h3 id="第二步：建立文檔"><a href="#第二步：建立文檔" class="headerlink" title="第二步：建立文檔"></a>第二步：建立文檔</h3><p>本文檔系統的框架已經建好並且已經提交至 SVN 服務器中：</p>
<p><img src="/sulfurandcu.io/clnybw9vu001xbkrq6tmo3euo/document.cloud.png" alt="圖片加載失敗"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://svn.sulfurandcu.com/doc</span><br></pre></td></tr></table></figure>

<h3 id="第三步：預覽效果"><a href="#第三步：預覽效果" class="headerlink" title="第三步：預覽效果"></a>第三步：預覽效果</h3><p>將上述文檔框架下載到本地，在其根目錄下執行 docsify serve 命令啓動一個本地服務器，就可以在本地預覽效果。</p>
<p><img src="/sulfurandcu.io/clnybw9vu001xbkrq6tmo3euo/document.local.png" alt="圖片加載失敗"></p>
<p><img src="/sulfurandcu.io/clnybw9vu001xbkrq6tmo3euo/document.serve.png" alt="圖片加載失敗"></p>
<center>
docsify s
</center>

<div class="note warning"><p>點擊 <a href="http://localhost:3000/">http://localhost:3000</a> 即可預覽</p>
</div>

<h3 id="第四步：進入正軌（編輯文檔、本地預覽、提交變更）"><a href="#第四步：進入正軌（編輯文檔、本地預覽、提交變更）" class="headerlink" title="第四步：進入正軌（編輯文檔、本地預覽、提交變更）"></a>第四步：進入正軌（編輯文檔、本地預覽、提交變更）</h3><p>搭建好開發環境、將〈＃項目文檔〉下載到本地且知道怎麼預覽以後，就可以開始編輯、預覽、提交了，跟代碼的編輯、調試、提交沒什麼兩樣！</p>
<p><img src="/sulfurandcu.io/clnybw9vu001xbkrq6tmo3euo/document.write.png" alt="圖片加載失敗"></p>
<p>文章使用輕量級標記語言 <a href="https://www.markdownguide.org/basic-syntax/">markdown</a> 編寫；圖例使用 <a href="https://www.diagrams.net/">draw.io</a> 繪製。</p>
<h2 id="技術細節"><a href="#技術細節" class="headerlink" title="技術細節"></a>技術細節</h2><p>這部分內容是文檔系統搭建的一些具體細節，在這裏記錄一下以供後續維護人員參考。需要說明的一點是，當前所使用的服務器運行的是 Windows 操作系統，因此以下操作均基於該操作系統。</p>
<h3 id="自動更新"><a href="#自動更新" class="headerlink" title="自動更新"></a>自動更新</h3><p>在 Windows 系統中，使用系統自帶的任務計劃程序實現：在〈計算機管理・任務計劃程序〉中創建一個週期任務，每隔一段時間執行一次以下腳本。</p>
<figure class="highlight py"><figcaption><span>doc.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">cmd = <span class="string">&quot;svn up \&quot;e:/＃文檔系統\&quot; --non-interactive&quot;</span></span><br><span class="line">os.system(cmd)</span><br></pre></td></tr></table></figure>

<div class="note info"><p>任務計劃程序配置好之後重啓電腦不影響其運行</p>
</div>

<h3 id="手動更新"><a href="#手動更新" class="headerlink" title="手動更新"></a>手動更新</h3><p>改動提交之後想立即更新至文檔服務器應該怎麼做呢？</p>
<p>遠程連接到服務器，手動執行一下 doc.py 即可。</p>
<h3 id="手動啓動-docsify-服務"><a href="#手動啓動-docsify-服務" class="headerlink" title="手動啓動 docsify 服務"></a>手動啓動 docsify 服務</h3><p>電腦關機後 docsify 服務也會隨之停止，因此每次開機後都要手動啓動 docsify 服務。我嘗試過啓動後自動運行，但是經常會執行失敗。</p>
<h2 id="常見問題"><a href="#常見問題" class="headerlink" title="常見問題"></a>常見問題</h2><h3 id="服務器重啓後網頁無法訪問！"><a href="#服務器重啓後網頁無法訪問！" class="headerlink" title="服務器重啓後網頁無法訪問！"></a>服務器重啓後網頁無法訪問！</h3><p>檢查 docsify 服務是否已經啓動。</p>
<h3 id="修改提交之後內容沒有更新！"><a href="#修改提交之後內容沒有更新！" class="headerlink" title="修改提交之後內容沒有更新！"></a>修改提交之後內容沒有更新！</h3><p>首先看週期更新任務是否正常執行。</p>
<p>如果週期更新任務沒有問題，那麼有可能是管理員同志的公司帳號密碼修改過，而文檔服務器中 svn 的訪問密碼沒有同步修改導致的。</p>
<div class="note warning"><p>系統會強制讓職工每隔兩個月修改一次密碼</p>
</div>
]]></content>
      <categories>
        <category>效率提升</category>
      </categories>
      <tags>
        <tag>docsify</tag>
        <tag>文檔系統</tag>
      </tags>
  </entry>
  <entry>
    <title>思源字體使用指南</title>
    <url>/sulfurandcu.io/clnyhr2mj002010rq1hzhgzb2.html</url>
    <content><![CDATA[<p><img src="/sulfurandcu.io/clnyhr2mj002010rq1hzhgzb2/cover.png"></p>
<span id="more"></span>

<p>思源字體，阿逗比的開源字體項目之一，目前已經出了兩款：思源黑體和思源宋體。思源系列的字體屬於泛中日韓字體，即支持中文、日文、韓文三種文字，其中中文又分爲大陸字形、香港字形和臺灣字形。</p>
<ul>
<li>中文（大陸）<ul>
<li>大陸獨佔的漢字－簡體</li>
<li>大陸特色的漢字－繁體</li>
</ul>
</li>
<li>中文（香港）<ul>
<li>香港特色的漢字－繁體</li>
</ul>
</li>
<li>中文（臺灣）<ul>
<li>臺灣特色的漢字－繁體</li>
</ul>
</li>
<li>日文（日本）<ul>
<li>日本特色的漢字＋假名</li>
</ul>
</li>
<li>韓文（朝韓）<ul>
<li>朝韓特色的漢字＋諺文</li>
</ul>
</li>
</ul>
<h1 id="思源宋體"><a href="#思源宋體" class="headerlink" title="思源宋體"></a>思源宋體</h1><p><strong>OTF 語言</strong><br>ZIP : 日語・七個 otf 文件對應七個字重・Language Specific OTFs J・Source Han Serif<br>ZIP : 韓語・七個 otf 文件對應七個字重・Language Specific OTFs K・Source Han Serif K<br>ZIP : 簡中・七個 otf 文件對應七個字重・Language Specific OTFs S・Source Han Serif SC<br>ZIP : 臺中・七個 otf 文件對應七個字重・Language Specific OTFs T・Source Han Serif TC<br>ZIP : 港中・七個 otf 文件對應七個字重・Language Specific OTFs T・Source Han Serif HC</p>
<p><strong>OTF 地區</strong><br>ZIP : 日本・七個 otf 文件對應七個字重・Region Specific Subset OTFs JP・Source Han Serif JP<br>ZIP : 韓國・七個 otf 文件對應七個字重・Region Specific Subset OTFs KR・Source Han Serif KR<br>ZIP : 大陸・七個 otf 文件對應七個字重・Region Specific Subset OTFs CN・Source Han Serif CN<br>ZIP : 臺灣・七個 otf 文件對應七個字重・Region Specific Subset OTFs TW・Source Han Serif TW<br>ZIP : 香港・七個 otf 文件對應七個字重・Region Specific Subset OTFs HK・Source Han Serif HK</p>
<p><strong>OTF 語言</strong>（上述文件的歸檔包）<br>ZIP : All Static Language Specific OTFs</p>
<p><strong>OTF 地區</strong>（上述文件的歸檔包）<br>ZIP : All Static Region Specific Subset OTFs</p>
<p><strong>OTC 版本</strong><br>ZIP : 全部・七個 ttc 文件對應七個字重・All Static Language Specific OTCs・Source Han Serif</p>
<p><strong>SuperOTC 版本</strong><br>ZIP : 全部・一個 ttc 文件包含所有字重・Static Super OTC・Source Han Serif</p>
<p><strong>All Variable Fonts</strong> (OTF, TTF, OTC, WOFF2)</p>
<ul>
<li>OTF<ul>
<li>OTF 語言（五個 otf 文件對應五種字形）</li>
<li>OTF 地區（五個 otf 文件對應五種字形）</li>
</ul>
</li>
<li>TTF<ul>
<li>TTF 語言（五個 ttf 文件對應五種字形）</li>
<li>TTF 地區（五個 ttf 文件對應五種字形）</li>
</ul>
</li>
<li>OTC<ul>
<li>一個 otf.ttc 文件（上面 OTF 語言的合集）</li>
<li>一個 ttf.ttc 文件（上面 TTF 語言的合集）</li>
</ul>
</li>
<li>WOFF2<ul>
<li>OTF<ul>
<li>OTF 語言（五個 otf.woff2 文件對應五種字形）</li>
<li>OTF 地區（五個 otf.woff2 文件對應五種字形）</li>
</ul>
</li>
<li>TTF<ul>
<li>TTF 語言（五個 ttf.woff2 文件對應五種字形）</li>
<li>TTF 地區（五個 ttf.woff2 文件對應五種字形）</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><strong>思源宋體的七個字重：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">200 - extralight</span><br><span class="line">300 - light</span><br><span class="line">400 - regular</span><br><span class="line">500 - medium</span><br><span class="line">600 - semibold</span><br><span class="line">700 - bold</span><br><span class="line">900 - heavy</span><br></pre></td></tr></table></figure>


<h1 id="思源黑體"><a href="#思源黑體" class="headerlink" title="思源黑體"></a>思源黑體</h1><p><strong>OTF 語言</strong><br>ZIP : 日語・七個 otf 文件對應七個字重・Language Specific OTFs J・Source Han Sans<br>ZIP : 韓語・七個 otf 文件對應七個字重・Language Specific OTFs K・Source Han Sans K<br>ZIP : 簡中・七個 otf 文件對應七個字重・Language Specific OTFs S・Source Han Sans SC<br>ZIP : 臺中・七個 otf 文件對應七個字重・Language Specific OTFs T・Source Han Sans TC<br>ZIP : 港中・七個 otf 文件對應七個字重・Language Specific OTFs T・Source Han Sans HC</p>
<p><strong>OTF 語言</strong>（HW）<br>ZIP : 日語・七個 otf 文件對應七個字重・Language Specific OTFs J HW・Source Han Sans HW<br>ZIP : 韓語・七個 otf 文件對應七個字重・Language Specific OTFs K HW・Source Han Sans K HW<br>ZIP : 簡中・七個 otf 文件對應七個字重・Language Specific OTFs S HW・Source Han Sans SC HW<br>ZIP : 臺中・七個 otf 文件對應七個字重・Language Specific OTFs T HW・Source Han Sans TC HW<br>ZIP : 港中・七個 otf 文件對應七個字重・Language Specific OTFs T HW・Source Han Sans HC HW</p>
<p><strong>OTF 地區</strong><br>ZIP : 日本・七個 otf 文件對應七個字重・Region Specific Subset OTFs JP・Source Han Sans JP<br>ZIP : 韓國・七個 otf 文件對應七個字重・Region Specific Subset OTFs KR・Source Han Sans KR<br>ZIP : 大陸・七個 otf 文件對應七個字重・Region Specific Subset OTFs CN・Source Han Sans CN<br>ZIP : 臺灣・七個 otf 文件對應七個字重・Region Specific Subset OTFs TW・Source Han Sans TW<br>ZIP : 香港・七個 otf 文件對應七個字重・Region Specific Subset OTFs HK・Source Han Sans HK</p>
<p><strong>OTF 語言</strong>（上述文件的歸檔包）<br>ZIP : All Static Language Specific OTFs</p>
<p><strong>OTF 地區</strong>（上述文件的歸檔包）<br>ZIP : All Static Region Specific Subset OTFs</p>
<p><strong>OTC 版本</strong><br>ZIP : 全部・七個 ttc 文件對應七個字重・All Static Language Specific OTCs・Source Han Sans</p>
<p><strong>SuperOTC 版本</strong><br>ZIP : 全部・一個 ttc 文件包含所有字重・Static Super OTC・Source Han Sans</p>
<p><strong>All Variable Fonts</strong> (OTF, TTF, OTC, WOFF2)</p>
<ul>
<li>OTF<ul>
<li>OTF 語言（五個 otf 文件對應五種字形）</li>
<li>OTF 地區（五個 otf 文件對應五種字形）</li>
<li>OTF 等寬（五個 otf 文件對應五種字形）</li>
</ul>
</li>
<li>TTF<ul>
<li>TTF 語言（五個 ttf 文件對應五種字形）</li>
<li>TTF 地區（五個 ttf 文件對應五種字形）</li>
<li>TTF 等寬（五個 ttf 文件對應五種字形）</li>
</ul>
</li>
<li>OTC<ul>
<li>一個 otf.ttc 文件（上面 OTF 語言的合集）</li>
<li>一個 ttf.ttc 文件（上面 TTF 語言的合集）</li>
<li>一個 otf.ttc 文件（上面 OTF 等寬的合集）</li>
<li>一個 ttf.ttc 文件（上面 TTF 等寬的合集）</li>
</ul>
</li>
<li>WOFF2<ul>
<li>OTF<ul>
<li>OTF 語言（五個 otf.woff2 文件對應五種字形）</li>
<li>OTF 地區（五個 otf.woff2 文件對應五種字形）</li>
<li>OTF 等寬（五個 otf.woff2 文件對應五種字形）</li>
</ul>
</li>
<li>TTF<ul>
<li>TTF 語言（五個 ttf.woff2 文件對應五種字形）</li>
<li>TTF 地區（五個 ttf.woff2 文件對應五種字形）</li>
<li>TTF 等寬（五個 ttf.woff2 文件對應五種字形）</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><strong>思源黑體的七個字重：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">200 - extralight</span><br><span class="line">300 - light</span><br><span class="line">    - normal</span><br><span class="line">400 - regular</span><br><span class="line">500 - medium</span><br><span class="line">700 - bold</span><br><span class="line">900 - heavy</span><br></pre></td></tr></table></figure>


<h1 id="標準字重"><a href="#標準字重" class="headerlink" title="標準字重"></a>標準字重</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">100 - Thin</span><br><span class="line">200 - Extra Light</span><br><span class="line">300 - Light</span><br><span class="line">400 - Semi Light (Normal)</span><br><span class="line">500 - Medium</span><br><span class="line">600 - Semi Bold</span><br><span class="line">700 - Bold</span><br><span class="line">800 - Extra Bold</span><br><span class="line">900 - Heavy</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>語言文字</category>
      </categories>
      <tags>
        <tag>思源字體</tag>
      </tags>
  </entry>
  <entry>
    <title>網頁字體使用指南</title>
    <url>/sulfurandcu.io/clnyhr2mj002210rq74hmcdni.html</url>
    <content><![CDATA[<p>在被 fontmin 和 font-spider 這倆貨虐得體無完膚之後，我決定試試<a href="https://hsingko.github.io/post/compress_webfont/">這篇文章</a>中提到的另一個字體壓縮工具</p>
<p><strong><center>“<a href="https://github.com/fonttools/fonttools">fonttools</a>”</center></strong></p>
<span id="more"></span>

<h3 id="網頁使用中文字體的方案？"><a href="#網頁使用中文字體的方案？" class="headerlink" title="網頁使用中文字體的方案？"></a>網頁使用中文字體的方案？</h3><ol start="0">
<li>使用安全字體</li>
<li>使用壓縮字體</li>
<li>谷歌字體接口（google fonts api）</li>
</ol>
<p>大多數網站的中文字體使用的都是安全字體，也就是機器中原生攜帶的字體，這樣的好處是無需通過網絡傳輸字體文件，也就不存在加載過慢的問題。安全字體好用是好用，但是架不住它丑啊，否則我也不會捯飭字體壓縮了不是！</p>
<p>使用谷歌的服務就意味着要拒絕來自不懂得科學上網的讀者的訪問，這是我所不能接受的。</p>
<p>所以，唯一的選擇就是“字體壓縮”！</p>
<h3 id="爲什麼要對字體進行壓縮？"><a href="#爲什麼要對字體進行壓縮？" class="headerlink" title="爲什麼要對字體進行壓縮？"></a>爲什麼要對字體進行壓縮？</h3><p>這裏的字體指的是漢字（泛中日韓）字體，拉丁字符或者西里爾字符這種字符數量較少的字體的體積通常比較小，沒有壓縮的必要。漢字字體通常收錄幾千上萬個字符，大小能達到幾十兆字節，而常用的漢字不過兩三千，聚焦至單篇文章中可能連一千都不到。倘若每次加載網頁時都要將完整的字體文件下載下來，其加載時間是往往是難以忍受的，這樣我們就要想法子縮減字體文件的體積。巧的是，字體壓縮就是幹這個的。</p>
<p>字體壓縮這麼“中藥”，社區應該非常活躍纔是啊，爲啥像 fontmin 和 font-spider 之類的工具基本都不怎麼維護了呢？</p>
<p>這裏的重要是有前提的，在無利可圖的情況下，沒有人或資本會給自己找不痛快，像我這種閒得蛋疼的除外。所以，知道前提是啥了不？😏</p>
<h3 id="使用-fonttools-進行靜態壓縮！"><a href="#使用-fonttools-進行靜態壓縮！" class="headerlink" title="使用 fonttools 進行靜態壓縮！"></a>使用 fonttools 進行靜態壓縮！</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pyftsubset font.ttf --text=$(cat hanzi.txt) --no-hinting</span><br></pre></td></tr></table></figure>

<p>靜態壓縮的問題在於，無法保證文章中不會用到常用字表以外的字。</p>
<h3 id="使用-fonttools-進行動態壓縮！"><a href="#使用-fonttools-進行動態壓縮！" class="headerlink" title="使用 fonttools 進行動態壓縮！"></a>使用 fonttools 進行動態壓縮！</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pyftsubset ../font/SourceHanSerifSC-Regular.otf --text=$(rg -e &#x27;[\u&#123;0100&#125;-\u&#123;10ffff&#125;]&#x27; -oN --no-filename|sort|uniq|tr -d &#x27;\n&#x27;) --no-hinting</span><br></pre></td></tr></table></figure>

<p>動態壓縮的問題在於，每次更新文章後都要執行一次字體壓縮流程。</p>
<p>因此流程自動化迫在眉睫！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">由於本人太忙（懶），自動化腳本隨緣更新！</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>語言文字</category>
      </categories>
      <tags>
        <tag>網頁字體</tag>
      </tags>
  </entry>
  <entry>
    <title>dƷvorak</title>
    <url>/sulfurandcu.io/clnyhr2mk002410rq6z6893sz.html</url>
    <content><![CDATA[<p><strong><center>The <a href="https://github.com/sulfurandcu/d3vorak">dƷvorak</a> keyboard layout has been released !</center></strong></p>
<br>

<p style="font-family:courier new">
　　　　　　　　1　　2　　3　　4　　5　　6　　7　　8　　9　　0　　[　　]　　 　　　　　　　<br>
　　　　　　　　;　　,　　.　　y　　w　　r　　k　　d　　l　　c　　/　　=　　\　　　　　　　<br>
　　　　　　　　a　　o　　e　　i　　u　　g　　h　　t　　n　　s　　-　　 　　 　　　　　　　<br>
　　　　　　　　'　　q　　x　　j　　v　　b　　f　　m　　p　　z　　 　　 　　 　　　　　　　<br>
</p>

<span id="more"></span>

<br>
]]></content>
      <categories>
        <category>輸入方案</category>
      </categories>
      <tags>
        <tag>鍵位佈局</tag>
        <tag>qwerty</tag>
        <tag>dvorak</tag>
        <tag>dƷvorak</tag>
      </tags>
  </entry>
  <entry>
    <title>DLT645</title>
    <url>/sulfurandcu.io/clnyhr2ml002810rq6pxn7cmn.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>開發筆記</category>
      </categories>
      <tags>
        <tag>DLT645</tag>
        <tag>多功能電能表通信協議</tag>
        <tag>電力</tag>
        <tag>行業標準</tag>
      </tags>
  </entry>
  <entry>
    <title>極樂迪斯科歐序篇</title>
    <url>/sulfurandcu.io/clnyhr2ml002c10rq648736uf.html</url>
    <content><![CDATA[<p>- There’s this giant ball there. And evil apes. And the evil apes are dukin’ it out on the ball. You’re one of them. It’s basically all just evil apes dukin’ it out on a giant ball.</p>
<p>- How big is the ball?<br>- You can’t even make out it’s a ball, when you’re dukin’it out. It’s that large.</p>
<p>- How small are the apes?<br>- Infinitesimally small.</p>
<p>- And this “dukin’ it out” I keep hearing about - what’s that?<br>- Vying for resources? It’s just a stupid expression you picked up somewhere. The part of the presentation you want to take home with you is this: you have to beat the other evil apes in the face or you lose.</p>
<p>- That sounds like something I would like to do.</p>
]]></content>
      <categories>
        <category>遊戲筆記</category>
      </categories>
      <tags>
        <tag>極樂迪斯科</tag>
      </tags>
  </entry>
  <entry>
    <title>億枝紅杏兒出牆來</title>
    <url>/sulfurandcu.io/clnyhr2mm002g10rqgzfk3qms.html</url>
    <content><![CDATA[<center><a href="https://www.v2ray.com/awesome/tools.html">神一样的工具们</a></center>
<center><a href="https://shadowsocks.org/en/index.html">https://shadowsocks.org/en/index.html</a></center>

<span id="more"></span>

<h3 id="真香定律"><a href="#真香定律" class="headerlink" title="真香定律"></a>真香定律</h3><p>更新（2021-05-05）</p>
<p>技術無時無刻不在發展，各種代理方案如雨後春筍般冒出來。新技術雖然一個比一個強大，但是配置起來也確實麻煩，咱畢竟不是專業玩家，日常使用更應注重方便快捷。</p>
<p>最近同事給推薦了一個代理軟件 <a href="https://github.com/Fndroid/clash_for_windows_pkg">clash4windows</a> 還不錯，搭配各路機場，比 <a href="https://github.com/2dust/v2rayN">V2rayN</a> 要好用不少。</p>
<p><a href="https://github.com/Dreamacro/clash/wiki/configuration">官方出品Clash配置文件</a><br><a href="https://v2raytech.com/deep-in-clash-config-file/">深入理解Clash配置文件</a></p>
<h3 id="後起之秀"><a href="#後起之秀" class="headerlink" title="後起之秀"></a>後起之秀</h3><p>更新（2020-03-15）</p>
<p>由於牆的封鎖能力愈來愈強，本文之前所列举的方案已經不再適用，目前本人已棄用 shadowsocks 轉投 v2ray 的懷抱。</p>
<p>技術文檔：<a href="https://www.v2ray.com/">v2ray site</a><br>技術文檔：<a href="https://toutyrater.github.io/">v2ray 白话文教程 - 原版</a><br>技術文檔：<a href="https://guide.v2fly.org/">v2ray 白话文教程 - 新版</a></p>
<p><a href="https://guide.v2fly.org/basics/vmess.html#%E5%8E%9F%E7%90%86%E7%AE%80%E6%9E%90">這裏</a>介紹了 v2ray 的工作原理。</p>
<blockquote>
<p>v2ray 可同时开启多个协议支持，包括 http、socks、shadowsocks、vmess 等。每个协议可单独设置传输载体，比如 TCP、mKCP、http&#x2F;2、WebSocket 等。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Vmess + TCP + TLS + Web</span><br><span class="line">Vmess + KCP + TLS + Web</span><br><span class="line">Vmess + HTTP/2 + TLS + Web</span><br><span class="line">Vmess + WebSocket + TLS + Web</span><br><span class="line">Vmess + WebSocket + TLS + Web + CDN</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;浏览器&#125; &lt;--(socks)--&gt; &#123;V2Ray 客户端 inbound &lt;-&gt; V2Ray 客户端 outbound&#125; &lt;--(HTTP)--&gt;  &#123;V2Ray 服务器 inbound &lt;-&gt; V2Ray 服务器 outbound&#125; &lt;--(Freedom)--&gt; &#123;目标网站&#125;</span><br><span class="line">&#123;浏览器&#125; &lt;--(socks)--&gt; &#123;V2Ray 客户端 inbound &lt;-&gt; V2Ray 客户端 outbound&#125; &lt;--(shadowsocks)--&gt;  &#123;V2Ray 服务器 inbound &lt;-&gt; V2Ray 服务器 outbound&#125; &lt;--(Freedom)--&gt; &#123;目标网站&#125;</span><br><span class="line">&#123;浏览器&#125; &lt;--(socks)--&gt; &#123;V2Ray 客户端 inbound &lt;-&gt; V2Ray 客户端 outbound&#125; &lt;--(VMess)--&gt;  &#123;V2Ray 服务器 inbound &lt;-&gt; V2Ray 服务器 outbound&#125; &lt;--(Freedom)--&gt; &#123;目标网站&#125;</span><br><span class="line"></span><br><span class="line">&#123;浏览器&#125; &lt;--(socks)--&gt; &#123;V2Ray 客户端 inbound &lt;-&gt; V2Ray 客户端 outbound&#125; &lt;--(VMess/TLS/TCP)--&gt;  &#123;V2Ray 服务器 inbound &lt;-&gt; V2Ray 服务器 outbound&#125; &lt;--(Freedom)--&gt; &#123;目标网站&#125;</span><br><span class="line">&#123;浏览器&#125; &lt;--(socks)--&gt; &#123;V2Ray 客户端 inbound &lt;-&gt; V2Ray 客户端 outbound&#125; &lt;--(VMess/TLS/KCP)--&gt;  &#123;V2Ray 服务器 inbound &lt;-&gt; V2Ray 服务器 outbound&#125; &lt;--(Freedom)--&gt; &#123;目标网站&#125;</span><br><span class="line">&#123;浏览器&#125; &lt;--(socks)--&gt; &#123;V2Ray 客户端 inbound &lt;-&gt; V2Ray 客户端 outbound&#125; &lt;--(VMess/h2/TLS/TCP)--&gt;  &#123;V2Ray 服务器 inbound &lt;-&gt; V2Ray 服务器 outbound&#125; &lt;--(Freedom)--&gt; &#123;目标网站&#125;</span><br><span class="line">&#123;浏览器&#125; &lt;--(socks)--&gt; &#123;V2Ray 客户端 inbound &lt;-&gt; V2Ray 客户端 outbound&#125; &lt;--(VMess/ws/TLS/TCP)--&gt;  &#123;V2Ray 服务器 inbound &lt;-&gt; V2Ray 服务器 outbound&#125; &lt;--(Freedom)--&gt; &#123;目标网站&#125;</span><br></pre></td></tr></table></figure>

<p>上面所陳列的若干技術文檔對實現原理進行了詳細說明，不過真要根據上述理論做出一套現實可行的代理方案出來，對於我這種半瓶水玩家來說還是有點難度的，還是老老實實按別人的教程來吧：<a href="http://iqotom.com/?p=1327">Vmess + WebSocket + TLS(domain) + Web(Caddy) + CDN(Cloudflare) 方案復活</a>。</p>
<h3 id="懵懂時期"><a href="#懵懂時期" class="headerlink" title="懵懂時期"></a>懵懂時期</h3><p>以下方案在 2018 年前後尚能對付着用，現在（2020）基本上是一封一個准兒，牆愈來愈高，吾輩還是要跟上時代的步伐呀！</p>
<h4 id="使用-bbr-加速"><a href="#使用-bbr-加速" class="headerlink" title="使用 bbr 加速"></a>使用 bbr 加速</h4><p><strong>安裝、設置、重啓</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname -r</span><br><span class="line"></span><br><span class="line">sudo rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br><span class="line">sudo rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</span><br><span class="line"></span><br><span class="line">sudo yum --enablerepo=elrepo-kernel install kernel-ml -y</span><br><span class="line"></span><br><span class="line">rpm -qa | grep kernel</span><br><span class="line"></span><br><span class="line">sudo egrep ^menuentry /etc/grub2.cfg | cut -f 2 -d \&#x27;</span><br><span class="line"></span><br><span class="line">sudo grub2-set-default 0</span><br><span class="line"></span><br><span class="line">sudo shutdown -r now</span><br></pre></td></tr></table></figure>

<p><strong>重啓過後</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname -r</span><br><span class="line"></span><br><span class="line">echo &#x27;net.core.default_qdisc=fq&#x27; | sudo tee -a /etc/sysctl.conf</span><br><span class="line">echo &#x27;net.ipv4.tcp_congestion_control=bbr&#x27; | sudo tee -a /etc/sysctl.conf</span><br><span class="line">sudo sysctl -p</span><br><span class="line"></span><br><span class="line">sudo sysctl net.ipv4.tcp_available_congestion_control</span><br><span class="line"></span><br><span class="line">net.ipv4.tcp_available_congestion_control = bbr cubic reno</span><br><span class="line"></span><br><span class="line">sudo sysctl -n net.ipv4.tcp_congestion_control</span><br><span class="line"></span><br><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure>

<p><strong>測試工具｜可選</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum install httpd -y</span><br><span class="line">sudo systemctl start httpd.service</span><br><span class="line">sudo firewall-cmd --zone=public --permanent --add-service=http</span><br><span class="line">sudo firewall-cmd --reload</span><br><span class="line">cd /var/www/html</span><br><span class="line">sudo dd if=/dev/zero of=500mb.zip bs=1024k count=500</span><br><span class="line"></span><br><span class="line">http://[your-server-IP]/500mb.zip</span><br></pre></td></tr></table></figure>

<h4 id="服務端工具之-shadowsocks"><a href="#服務端工具之-shadowsocks" class="headerlink" title="服務端工具之 shadowsocks"></a>服務端工具之 shadowsocks</h4><p><strong>程序安裝</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl &quot;https://bootstrap.pypa.io/get-pip.py&quot; -o &quot;get-pip.py&quot;</span><br><span class="line">python get-pip.py</span><br><span class="line">pip install --upgrade pip</span><br><span class="line"></span><br><span class="line">pip install shadowsocks</span><br><span class="line">pip install https://github.com/shadowsocks/shadowsocks/archive/master.zip -U</span><br></pre></td></tr></table></figure>

<p><strong>編輯配置</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/shadowsocks.json</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 配置一：</span><br><span class="line">&#123;</span><br><span class="line">  &quot;server&quot;: &quot;0.0.0.0&quot;,</span><br><span class="line">  &quot;server_port&quot;: 10235,</span><br><span class="line">  &quot;password&quot;: &quot;Pass3ord&quot;,</span><br><span class="line">  &quot;timeout&quot;: 300,</span><br><span class="line">  &quot;method&quot;: &quot;aes-256-gcm&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 配置二：</span><br><span class="line">&#123;</span><br><span class="line">    &quot;server&quot;: &quot;0.0.0.0&quot;,</span><br><span class="line">    &quot;port_password&quot;: &#123;</span><br><span class="line">        &quot;10236&quot;: &quot;password&quot;,</span><br><span class="line">        &quot;10237&quot;: &quot;password&quot;</span><br><span class="line">        &quot;10238&quot;: &quot;password&quot;</span><br><span class="line">        &quot;10239&quot;: &quot;password&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;timeout&quot;: 300,</span><br><span class="line">    &quot;method&quot;: &quot;aes-256-cfb&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>啓動服務</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssserver -c /etc/shadowsocks.json -d start</span><br></pre></td></tr></table></figure>

<h4 id="服務端工具之-shadowsocksR"><a href="#服務端工具之-shadowsocksR" class="headerlink" title="服務端工具之 shadowsocksR"></a>服務端工具之 shadowsocksR</h4><h4 id="服務端工具之-v2ray"><a href="#服務端工具之-v2ray" class="headerlink" title="服務端工具之 v2ray"></a>服務端工具之 v2ray</h4><p><strong>程序安裝</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install wget</span><br><span class="line">yum -y install zip unzip</span><br><span class="line">wget https://install.direct/go.sh</span><br><span class="line">bash go.sh</span><br></pre></td></tr></table></figure>

<p><strong>編輯配置</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/v2ray/config.json</span><br></pre></td></tr></table></figure>

<p><strong>啓動服務</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start v2ray</span><br></pre></td></tr></table></figure>

<h4 id="服務端防火牆-firewalld"><a href="#服務端防火牆-firewalld" class="headerlink" title="服務端防火牆 firewalld"></a>服務端防火牆 firewalld</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install firewalld</span><br><span class="line">systemctl start firewalld.service</span><br><span class="line"></span><br><span class="line">firewall-cmd --permanent --zone=public --add-port=80/tcp</span><br><span class="line">firewall-cmd --permanent --zone=public --add-port=443/tcp</span><br><span class="line">firewall-cmd --permanent --zone=public --add-port=10235/tcp</span><br><span class="line">firewall-cmd --permanent --zone=public --add-port=10245/tcp</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">firewall-cmd --zone=public --list-ports</span><br></pre></td></tr></table></figure>

<h4 id="客戶端工具之-shadowrocket"><a href="#客戶端工具之-shadowrocket" class="headerlink" title="客戶端工具之 shadowrocket"></a>客戶端工具之 shadowrocket</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">略.</span><br></pre></td></tr></table></figure>

<h4 id="客戶端工具之-outline"><a href="#客戶端工具之-outline" class="headerlink" title="客戶端工具之 outline"></a>客戶端工具之 outline</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ss://base64(method:password)@server-address:port</span><br><span class="line">ss://YWVzLTI1Ni1jZmI6UGFzc3dvcmQ=@xxx.xxx.xxx.xxx:xxxxx</span><br></pre></td></tr></table></figure>

<h3 id="上古時代"><a href="#上古時代" class="headerlink" title="上古時代"></a>上古時代</h3><p>諸位還記得通過修改 host 文件來科學上網的方式嗎，好懷念呀！</p>
]]></content>
      <categories>
        <category>科學上網</category>
      </categories>
      <tags>
        <tag>clash</tag>
        <tag>v2ray</tag>
        <tag>shadowsocks</tag>
      </tags>
  </entry>
  <entry>
    <title>別鬧了！費曼先生</title>
    <url>/sulfurandcu.io/clnyhr2mn002j10rqbhpkhcgy.html</url>
    <content><![CDATA[<center>Knowing the name of something is not the same as knowing something.</center>

<br>
]]></content>
      <categories>
        <category>費曼先生</category>
      </categories>
  </entry>
  <entry>
    <title>沒事兒也來做做題</title>
    <url>/sulfurandcu.io/clnyhr2mo002m10rq48l66wah.html</url>
    <content><![CDATA[<center><a href="http://sdoi.programming-rabbit.com/">http://sdoi.programming-rabbit.com/</a></center>

<span id="more"></span>

<h3 id="第一題"><a href="#第一題" class="headerlink" title="第一題"></a>第一題</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>张三和李四在玩一种游戏。</p>
<p>首先，张三从 A 与 B 之间（包括A和B）选择一个整数，告诉李四。</p>
<p>其次，李四从 C 与 D 之间（包括C和D）选择一个整数。</p>
<p>两个整数之和，如果是素数，张三赢，负责李四赢。</p>
<p>当两个人都是最佳发挥时，谁会赢？</p>
<p><strong>输入格式：</strong><br>一行四个正整数 A B C D 以空格隔开。</p>
<p><strong>输入格式：</strong><br>如果张三赢了，输出 X，否则输出 Y。</p>
<h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;sys/time.h&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">bool IsPrimeNumber(int n)</span><br><span class="line">&#123;</span><br><span class="line">	if (n &lt; 2)</span><br><span class="line">	&#123;</span><br><span class="line">		return false;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	int SquareRoot = 1;</span><br><span class="line"></span><br><span class="line">	while (SquareRoot * SquareRoot &lt; n)</span><br><span class="line">	&#123;</span><br><span class="line">		SquareRoot++;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	for (int i = 2; i &lt;= SquareRoot; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		if (n % i == 0)</span><br><span class="line">		&#123;</span><br><span class="line">			return false;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	return true;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, char **argv)</span><br><span class="line">&#123;</span><br><span class="line">	int a = 0;</span><br><span class="line">	int b = 0;</span><br><span class="line">	int c = 0;</span><br><span class="line">	int d = 0;</span><br><span class="line">	int i = 0;</span><br><span class="line">	int j = 0;</span><br><span class="line">	int sum = 0;</span><br><span class="line">	int x_win = 0;</span><br><span class="line">	int y_win = 0;</span><br><span class="line">	bool PrimeExist = false;</span><br><span class="line"></span><br><span class="line">	int usec_bgn;</span><br><span class="line">	int usec_end;</span><br><span class="line">	int usec_sub;</span><br><span class="line">	struct timeval tv;</span><br><span class="line"></span><br><span class="line">	/* 等待输入 */</span><br><span class="line">	cin&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d;</span><br><span class="line">	// a = 1; b = 100; c = 2; d = 3;</span><br><span class="line"></span><br><span class="line">	/* 参数判断 */</span><br><span class="line">	if (a &lt;= 0 || a &gt; 100 || b &lt;= 0 || b &gt; 100 || c &lt;= 0 || c &gt; 100 || d &lt;= 0 || d &gt; 100)</span><br><span class="line">	&#123;</span><br><span class="line">		printf(&quot;error input! a, b, c, d should be greater than zero and less than or equal to 100! \r\n&quot;);</span><br><span class="line">		return 0;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	/* 参数判断 */</span><br><span class="line">	if (a &gt; b || c &gt; d)</span><br><span class="line">	&#123;</span><br><span class="line">		printf(&quot;error input! b is bigger than a!\r\n&quot;);</span><br><span class="line">		return 0;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	/* 参数判断 */</span><br><span class="line">	if (c &gt; d)</span><br><span class="line">	&#123;</span><br><span class="line">		printf(&quot;error input! d is bigger than c!\r\n&quot;);</span><br><span class="line">		return 0;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	// printf(&quot;%d,%d,%d,%d\r\n&quot;, a, b, c, d);</span><br><span class="line"></span><br><span class="line">	/* 起始时间 */</span><br><span class="line">	gettimeofday(&amp;tv, NULL);</span><br><span class="line">	usec_bgn = (int)tv.tv_usec;</span><br><span class="line">	printf(&quot;\r\n&quot;);</span><br><span class="line">	printf(&quot;bgn time (second, micro-second): %ds, %dus\r\n&quot;, (int)tv.tv_sec, (int)tv.tv_usec);</span><br><span class="line">	printf(&quot;\r\n&quot;);</span><br><span class="line"></span><br><span class="line">	/* 胜负推演 */</span><br><span class="line">	for (i = a; i &lt;= b; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		PrimeExist = false;</span><br><span class="line"></span><br><span class="line">		for (j = c; j &lt;= d; ++j)</span><br><span class="line">		&#123;</span><br><span class="line">			sum = i + j;</span><br><span class="line"></span><br><span class="line">			if (IsPrimeNumber(sum))</span><br><span class="line">			&#123;</span><br><span class="line">				PrimeExist = true;</span><br><span class="line">				break;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		if (PrimeExist)</span><br><span class="line">		&#123;</span><br><span class="line">			y_win++;</span><br><span class="line"></span><br><span class="line">			#if 1 /* 如果不想显示中间过程，可以屏蔽下行（将 #if 1 改为 #if 0） */</span><br><span class="line">			printf(&quot;X = %d\tY = %d\tSUM  = %d \tY WIN !\r\n&quot;, i, j, sum);</span><br><span class="line">			#endif</span><br><span class="line">		&#125;</span><br><span class="line">		else</span><br><span class="line">		&#123;</span><br><span class="line">			x_win++;</span><br><span class="line"></span><br><span class="line">			#if 1 /* 如果不想显示中间过程，可以屏蔽下行（将 #if 1 改为 #if 0） */</span><br><span class="line">			printf(&quot;X = %d\tY =  \tSUM != Prime \tX WIN !\r\n&quot;, i);</span><br><span class="line">			#endif</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	printf(&quot;\r\n&quot;);</span><br><span class="line"></span><br><span class="line">	/* 比较小X和小Y总的胜负次数 */</span><br><span class="line">	if (x_win &gt; y_win)</span><br><span class="line">	&#123;</span><br><span class="line">		printf(&quot;X WIN TIMES = %d, Y WIN TIMES = %d, SO X WINS FINALLY !\r\n&quot;, x_win, y_win);</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	if (x_win &lt; y_win)</span><br><span class="line">	&#123;</span><br><span class="line">		printf(&quot;X WIN TIMES = %d, Y WIN TIMES = %d, SO Y WINS FINALLY !\r\n&quot;, x_win, y_win);</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		printf(&quot;X WIN TIMES = %d, Y WIN TIMES = %d, DRAWN GAME !\r\n&quot;, x_win, y_win);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	/* 结束时间 */</span><br><span class="line">	gettimeofday(&amp;tv, NULL);</span><br><span class="line">	usec_end = (int)tv.tv_usec;</span><br><span class="line">	printf(&quot;\r\n&quot;);</span><br><span class="line">	printf(&quot;end time (second, micro-second): %ds, %dus\r\n&quot;, (int)tv.tv_sec, (int)tv.tv_usec);</span><br><span class="line">	printf(&quot;\r\n&quot;);</span><br><span class="line"></span><br><span class="line">	/* 计算耗时 */</span><br><span class="line">	if (usec_end &gt;= usec_bgn)</span><br><span class="line">	&#123;</span><br><span class="line">		usec_sub = usec_end - usec_bgn;</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		usec_sub = 1000000 - (usec_bgn - usec_end);</span><br><span class="line">	&#125;</span><br><span class="line">	printf(&quot;time cost :%d us\r\n&quot;, usec_sub);</span><br><span class="line">	printf(&quot;\r\n&quot;);</span><br><span class="line"></span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="测试记录"><a href="#测试记录" class="headerlink" title="测试记录"></a>测试记录</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">编译环境 windows subsystem for linux (wsl) &amp; gcc/g++ v9.3.0</span><br><span class="line"></span><br><span class="line">user@localhost:/mnt/e/gcc$ g++ main.cpp -o main.cppout</span><br><span class="line">user@localhost:/mnt/e/gcc$ ./main.cppout</span><br><span class="line">1 100 2 3</span><br><span class="line"></span><br><span class="line">bgn time (second, micro-second): 1656168565s, 669332us</span><br><span class="line"></span><br><span class="line">X = 1   Y = 2   SUM  = 3        Y WIN !</span><br><span class="line">X = 2   Y = 3   SUM  = 5        Y WIN !</span><br><span class="line">X = 3   Y = 2   SUM  = 5        Y WIN !</span><br><span class="line">X = 4   Y = 3   SUM  = 7        Y WIN !</span><br><span class="line">X = 5   Y = 2   SUM  = 7        Y WIN !</span><br><span class="line">X = 6   Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 7   Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 8   Y = 3   SUM  = 11       Y WIN !</span><br><span class="line">X = 9   Y = 2   SUM  = 11       Y WIN !</span><br><span class="line">X = 10  Y = 3   SUM  = 13       Y WIN !</span><br><span class="line">X = 11  Y = 2   SUM  = 13       Y WIN !</span><br><span class="line">X = 12  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 13  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 14  Y = 3   SUM  = 17       Y WIN !</span><br><span class="line">X = 15  Y = 2   SUM  = 17       Y WIN !</span><br><span class="line">X = 16  Y = 3   SUM  = 19       Y WIN !</span><br><span class="line">X = 17  Y = 2   SUM  = 19       Y WIN !</span><br><span class="line">X = 18  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 19  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 20  Y = 3   SUM  = 23       Y WIN !</span><br><span class="line">X = 21  Y = 2   SUM  = 23       Y WIN !</span><br><span class="line">X = 22  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 23  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 24  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 25  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 26  Y = 3   SUM  = 29       Y WIN !</span><br><span class="line">X = 27  Y = 2   SUM  = 29       Y WIN !</span><br><span class="line">X = 28  Y = 3   SUM  = 31       Y WIN !</span><br><span class="line">X = 29  Y = 2   SUM  = 31       Y WIN !</span><br><span class="line">X = 30  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 31  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 32  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 33  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 34  Y = 3   SUM  = 37       Y WIN !</span><br><span class="line">X = 35  Y = 2   SUM  = 37       Y WIN !</span><br><span class="line">X = 36  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 37  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 38  Y = 3   SUM  = 41       Y WIN !</span><br><span class="line">X = 39  Y = 2   SUM  = 41       Y WIN !</span><br><span class="line">X = 40  Y = 3   SUM  = 43       Y WIN !</span><br><span class="line">X = 41  Y = 2   SUM  = 43       Y WIN !</span><br><span class="line">X = 42  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 43  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 44  Y = 3   SUM  = 47       Y WIN !</span><br><span class="line">X = 45  Y = 2   SUM  = 47       Y WIN !</span><br><span class="line">X = 46  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 47  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 48  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 49  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 50  Y = 3   SUM  = 53       Y WIN !</span><br><span class="line">X = 51  Y = 2   SUM  = 53       Y WIN !</span><br><span class="line">X = 52  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 53  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 54  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 55  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 56  Y = 3   SUM  = 59       Y WIN !</span><br><span class="line">X = 57  Y = 2   SUM  = 59       Y WIN !</span><br><span class="line">X = 58  Y = 3   SUM  = 61       Y WIN !</span><br><span class="line">X = 59  Y = 2   SUM  = 61       Y WIN !</span><br><span class="line">X = 60  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 61  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 62  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 63  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 64  Y = 3   SUM  = 67       Y WIN !</span><br><span class="line">X = 65  Y = 2   SUM  = 67       Y WIN !</span><br><span class="line">X = 66  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 67  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 68  Y = 3   SUM  = 71       Y WIN !</span><br><span class="line">X = 69  Y = 2   SUM  = 71       Y WIN !</span><br><span class="line">X = 70  Y = 3   SUM  = 73       Y WIN !</span><br><span class="line">X = 71  Y = 2   SUM  = 73       Y WIN !</span><br><span class="line">X = 72  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 73  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 74  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 75  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 76  Y = 3   SUM  = 79       Y WIN !</span><br><span class="line">X = 77  Y = 2   SUM  = 79       Y WIN !</span><br><span class="line">X = 78  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 79  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 80  Y = 3   SUM  = 83       Y WIN !</span><br><span class="line">X = 81  Y = 2   SUM  = 83       Y WIN !</span><br><span class="line">X = 82  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 83  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 84  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 85  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 86  Y = 3   SUM  = 89       Y WIN !</span><br><span class="line">X = 87  Y = 2   SUM  = 89       Y WIN !</span><br><span class="line">X = 88  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 89  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 90  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 91  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 92  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 93  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 94  Y = 3   SUM  = 97       Y WIN !</span><br><span class="line">X = 95  Y = 2   SUM  = 97       Y WIN !</span><br><span class="line">X = 96  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 97  Y =     SUM != Prime    X WIN !</span><br><span class="line">X = 98  Y = 3   SUM  = 101      Y WIN !</span><br><span class="line">X = 99  Y = 2   SUM  = 101      Y WIN !</span><br><span class="line">X = 100 Y = 3   SUM  = 103      Y WIN !</span><br><span class="line"></span><br><span class="line">X WIN TIMES = 50, Y WIN TIMES = 50, DRAWN GAME !</span><br><span class="line"></span><br><span class="line">end time (second, micro-second): 1656168565s, 670078us</span><br><span class="line"></span><br><span class="line">time cost :746 us</span><br><span class="line"></span><br><span class="line">user@localhost:/mnt/e/gcc$</span><br></pre></td></tr></table></figure>

<h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><h4 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h4><p>张三成为了一家餐厅的采购员。作为一个采购员要有良好的职业素养。必须保证每次采购的物资不超过自己车辆的容量，然后在此条件下使得餐厅赚取的收益最大。</p>
<p>商场中共有 n 种物资，编号为 1 到 n 。每种物资都有两个参数 v 和 w，分别表示这种物资的体积和采购这种物资可以给餐厅带来的收益。注意每种物资每天至多只能采购一件。</p>
<p>张三有一辆容量为 V 的采购车，每天张三只去采购一次，采购的物资体积之和不能超过车辆的容量。</p>
<p>对于每天采购的物资，餐厅老板还有特殊的要求，第 i 天老板要求张三不能采购编号大于等于 Li 并且小于等于 Ri 的物资（即不能采购编号在 [Li,Ri] 之间的物资）。特别的，当 Li&gt;Ri 时表示这天没有不可采购的物资。</p>
<p>对于接下来的 m 天，你需要告诉张三他每天分别最多可以给餐厅赚取多少的收益。</p>
<p><strong>输入格式：</strong><br>输入第一行两个个整数 n, V 表示共有 n 种物资，张三的车子容量是 V。<br>接下来 n 行，每行两个整数。<br>第 i+1 行输入vi, wi 表示第 i 种物资的体积和收益。<br>接下来一行输入一个整数 m ，表示需要采购的天数。<br>接下来 m 行，每行输入两个整数 Li, Ri 表示第 i 天不能采购编号位于 Li 到 Ri 之间的物资。</p>
<p><strong>输出格式：</strong><br>输出共 m 行，每行一个整数表示张三第 i 天可以给餐厅带来的收益。</p>
<p><strong>输入样例：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6   290     物资种类，容量</span><br><span class="line">85  97      1号体积，收益</span><br><span class="line">80  81      2号体积，收益</span><br><span class="line">83  1       3号体积，收益</span><br><span class="line">79  81      4号体积，收益</span><br><span class="line">89  1       5号体积，收益</span><br><span class="line">92  97      6号体积，收益</span><br><span class="line">5           天数</span><br><span class="line">3   5       Li-Ri</span><br><span class="line">1   1</span><br><span class="line">1   3</span><br><span class="line">5   2</span><br><span class="line">3   1</span><br></pre></td></tr></table></figure>

<p><strong>输出样例：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">275</span><br><span class="line">259</span><br><span class="line">179</span><br><span class="line">275</span><br><span class="line">275</span><br></pre></td></tr></table></figure>

<p><strong>补充说明：</strong><br>前 20% 的数据满足: 1&lt;&#x3D;n&lt;&#x3D;10,1&lt;&#x3D;m&lt;&#x3D;1000.<br>前 50% 的数据满足: 1&lt;&#x3D;n, m, V&lt;&#x3D;300.<br>对于 100% 的数据满足: 1&lt;&#x3D;n, m, V&lt;&#x3D;3000; 1&lt;&#x3D;vi&lt;&#x3D;3000; 1&lt;&#x3D;Li, Ri&lt;&#x3D;n; 1&lt;&#x3D;wi&lt;&#x3D;10^6.</p>
<p><strong>时间限制：</strong>1s</p>
<p><strong>空间限制：</strong>512M</p>
<h4 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;sys/time.h&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main(int argc, char **argv)</span><br><span class="line">&#123;</span><br><span class="line">	int daytotal;                       // 天数</span><br><span class="line">	int category;                       // 种类</span><br><span class="line">	int capacity;                       // 容量</span><br><span class="line">	int capacity_left;                  // 容量（剩余）</span><br><span class="line">	int edge[3001][2];                  // 边界条件</span><br><span class="line">	int menu[3001][2];                  // 货单</span><br><span class="line">	int menu_sort[3001][3];             // 货单（根据每件货物的收益率排序）</span><br><span class="line">	int idx = 0;</span><br><span class="line">	int sum = 0;                        // 收益</span><br><span class="line">	double rate_max = 0;                // 收益率</span><br><span class="line">	double rate_tmp = 0;                // 收益率</span><br><span class="line"></span><br><span class="line">	int usec_bgn;</span><br><span class="line">	int usec_end;</span><br><span class="line">	int usec_sub;</span><br><span class="line">	struct timeval tv;</span><br><span class="line"></span><br><span class="line">	#if 0</span><br><span class="line">	cin&gt;&gt;category&gt;&gt;capacity;</span><br><span class="line"></span><br><span class="line">	for (int i = 0; i &lt; category; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		cin&gt;&gt;menu[i][0]&gt;&gt;menu[i][1];</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	cin&gt;&gt;daytotal;</span><br><span class="line"></span><br><span class="line">	for (int i = 0; i &lt; daytotal; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		cin&gt;&gt;edge[i][0]&gt;&gt;edge[i][1];</span><br><span class="line">	&#125;</span><br><span class="line">	#else</span><br><span class="line">	category = 10;</span><br><span class="line">	capacity = 300;</span><br><span class="line">	menu[0][0] = 85; menu[0][1] = 97;</span><br><span class="line">	menu[1][0] = 80; menu[1][1] = 81;</span><br><span class="line">	menu[2][0] = 83; menu[2][1] = 1;</span><br><span class="line">	menu[3][0] = 79; menu[3][1] = 81;</span><br><span class="line">	menu[4][0] = 89; menu[4][1] = 1;</span><br><span class="line">	menu[5][0] = 92; menu[5][1] = 97;</span><br><span class="line">	daytotal = 10;</span><br><span class="line">	edge[0][0] = 3; edge[0][1] = 5;</span><br><span class="line">	edge[1][0] = 1; edge[1][1] = 1;</span><br><span class="line">	edge[2][0] = 1; edge[2][1] = 3;</span><br><span class="line">	edge[3][0] = 5; edge[3][1] = 2;</span><br><span class="line">	edge[4][0] = 3; edge[4][1] = 1;</span><br><span class="line">	#endif</span><br><span class="line"></span><br><span class="line">	/* 起始时间 */</span><br><span class="line">	gettimeofday(&amp;tv, NULL);</span><br><span class="line">	usec_bgn = (int)tv.tv_usec;</span><br><span class="line">	printf(&quot;\r\n&quot;);</span><br><span class="line">	printf(&quot;bgn time (second, micro-second): %ds, %dus\r\n&quot;, (int)tv.tv_sec, (int)tv.tv_usec);</span><br><span class="line">	printf(&quot;\r\n&quot;);</span><br><span class="line"></span><br><span class="line">	for (int j = 0; j &lt; category; ++j)</span><br><span class="line">	&#123;</span><br><span class="line">		idx = 0;</span><br><span class="line">		rate_max = 0;</span><br><span class="line"></span><br><span class="line">		for (int i = 0; i &lt; category; ++i)</span><br><span class="line">		&#123;</span><br><span class="line">			if (menu[i][0] == 0)</span><br><span class="line">			&#123;</span><br><span class="line">				continue;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			rate_tmp = (double)menu[i][1] / (double)menu[i][0];</span><br><span class="line"></span><br><span class="line">			if (rate_tmp &gt; rate_max)</span><br><span class="line">			&#123;</span><br><span class="line">				rate_max = rate_tmp;</span><br><span class="line">				idx = i;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		menu_sort[j][0] = menu[idx][0];</span><br><span class="line">		menu_sort[j][1] = menu[idx][1];</span><br><span class="line">		menu_sort[j][2] = idx;</span><br><span class="line">		menu[idx][0] = 0;</span><br><span class="line">		menu[idx][1] = 0;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	for (int day_idx = 0; day_idx &lt; daytotal; ++day_idx) /* 第n天 */</span><br><span class="line">	&#123;</span><br><span class="line">		sum = 0;</span><br><span class="line">		capacity_left = capacity;</span><br><span class="line"></span><br><span class="line">		for (int i = 0; i &lt; category; ++i)</span><br><span class="line">		&#123;</span><br><span class="line">			if ((menu_sort[i][2]+1) &gt;= edge[day_idx][0] &amp;&amp; (menu_sort[i][2]+1) &lt;= edge[day_idx][1])</span><br><span class="line">			&#123;</span><br><span class="line">				continue;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			if (capacity_left &gt;= menu_sort[i][0])</span><br><span class="line">			&#123;</span><br><span class="line">				capacity_left -= menu_sort[i][0];</span><br><span class="line">				sum += menu_sort[i][1];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		printf(&quot;%d\r\n&quot;, sum);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	/* 结束时间 */</span><br><span class="line">	gettimeofday(&amp;tv, NULL);</span><br><span class="line">	usec_end = (int)tv.tv_usec;</span><br><span class="line">	printf(&quot;\r\n&quot;);</span><br><span class="line">	printf(&quot;end time (second, micro-second): %ds, %dus\r\n&quot;, (int)tv.tv_sec, (int)tv.tv_usec);</span><br><span class="line">	printf(&quot;\r\n&quot;);</span><br><span class="line"></span><br><span class="line">	/* 计算耗时 */</span><br><span class="line">	if (usec_end &gt;= usec_bgn)</span><br><span class="line">	&#123;</span><br><span class="line">		usec_sub = usec_end - usec_bgn;</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		usec_sub = 1000000 - (usec_bgn - usec_end);</span><br><span class="line">	&#125;</span><br><span class="line">	printf(&quot;time cost :%d us\r\n&quot;, usec_sub);</span><br><span class="line">	printf(&quot;\r\n&quot;);</span><br><span class="line"></span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="测试记录-1"><a href="#测试记录-1" class="headerlink" title="测试记录"></a>测试记录</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@localhost:/mnt/e/gcc$ g++ main.cpp -o main.cppout</span><br><span class="line">user@localhost:/mnt/e/gcc$ ./main.cppout</span><br><span class="line"></span><br><span class="line">bgn time (second, micro-second): 1656593986s, 560594us</span><br><span class="line"></span><br><span class="line">275</span><br><span class="line">259</span><br><span class="line">179</span><br><span class="line">275</span><br><span class="line">275</span><br><span class="line">275</span><br><span class="line">275</span><br><span class="line">275</span><br><span class="line">275</span><br><span class="line">275</span><br><span class="line"></span><br><span class="line">end time (second, micro-second): 1656593986s, 560641us</span><br><span class="line"></span><br><span class="line">time cost :47 us</span><br><span class="line"></span><br><span class="line">user@localhost:/mnt/e/gcc$</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>開發筆記</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>格西調試精靈</title>
    <url>/sulfurandcu.io/clnygatr1002p2wrqgl9825k9.html</url>
    <content><![CDATA[<center><a href="http://www.geshe.com/zh-cn/products/ggenius">格西調試精靈</a>：一個不錯的調試工具</center>

<span id="more"></span>

<h2 id="授權說明"><a href="#授權說明" class="headerlink" title="授權說明"></a>授權說明</h2><p>本軟件需要購買授權，授權方式分兩種：</p>
<ul>
<li>完整版<ul>
<li>在線授權：39元&#x2F;每年，需要聯網使用，不對電腦綁定，同一時間僅限一臺電腦使用。</li>
<li>離線授權：99元&#x2F;永久，綁定一臺電腦，等於電腦壽命，重裝系統不影響，不能解綁。</li>
</ul>
</li>
<li>免費版<ul>
<li>基本功能</li>
<li>直接激勵</li>
<li>協議激勵（激勵文件無法保存）</li>
</ul>
</li>
</ul>
<p>當前我們僅有一臺電腦具有離線授權。但是！這並不妨礙我們薅羊毛：具有授權的開發者來編輯激勵文件，其他人只要奉行拿來主義就好啦！</p>
<ul>
<li>開發者（使用具有授權的電腦編寫激勵文件，並將激勵文件上傳至代碼倉庫）<ul>
<li>用戶一（從代碼倉庫中下載激勵文件並使用）</li>
<li>用戶二（從代碼倉庫中下載激勵文件並使用）</li>
<li>用戶ㄣ（從代碼倉庫中下載激勵文件並使用）</li>
</ul>
</li>
</ul>
<h2 id="使用說明"><a href="#使用說明" class="headerlink" title="使用說明"></a>使用說明</h2><ul>
<li>第一步：下載格西調試精靈並安裝</li>
<li>第二步：下載所需的協議激勵文件</li>
<li>第三步：打開格西調試精靈，點擊打開協議激勵項目，選擇剛剛下載的協議激勵文件。</li>
</ul>
<h2 id="用戶手冊"><a href="#用戶手冊" class="headerlink" title="用戶手冊"></a>用戶手冊</h2><div class="pdf-container" data-target="clnygatr1002p2wrqgl9825k9/manaul.pdf" data-height="800px"></div>
]]></content>
      <categories>
        <category>開發筆記</category>
      </categories>
      <tags>
        <tag>格西調試精靈</tag>
      </tags>
  </entry>
  <entry>
    <title>拓撲分析算法</title>
    <url>/sulfurandcu.io/clnyhr2mp002t10rqf5z089pu.html</url>
    <content><![CDATA[<p>2022年09月01日於武漢</p>
<pre class="mermaid">
flowchart TB
%%{init: { &quot;flowchart&quot;: { &quot;curve&quot;: &quot;basis&quot; } } }%%
R0[智能融合終端&lt;br&gt;SCU]
R0---&gt;N1[斷路器&lt;br&gt;9]
R0---&gt;N2[斷路器&lt;br&gt;16]
N1---&gt;N1.1[斷路器&lt;br&gt;7]
N1---&gt;N1.2[斷路器&lt;br&gt;6]
N1---&gt;N1.3[斷路器&lt;br&gt;10]
N1---&gt;N1.4[斷路器&lt;br&gt;12]
N2---&gt;N2.1[斷路器&lt;br&gt;18]
N2---&gt;N2.2[斷路器&lt;br&gt;19]
N2---&gt;N2.3[斷路器&lt;br&gt;14]
N1.1---&gt;N1.1.1[斷路器&lt;br&gt;3]
N1.1---&gt;N1.1.2[斷路器&lt;br&gt;4]
N1.1---&gt;N1.1.3[斷路器&lt;br&gt;5]
N1.2---&gt;N1.2.1[斷路器&lt;br&gt;8]
N1.2---&gt;N1.2.2[斷路器&lt;br&gt;11]
N1.3---&gt;N1.3.1[斷路器&lt;br&gt;2]
N2.2---&gt;N2.2.1[斷路器&lt;br&gt;13]
N2.2---&gt;N2.2.2[斷路器&lt;br&gt;17]
N1.1.1---&gt;N1.1.1.1[斷路器&lt;br&gt;0]
N1.2.2---&gt;N1.2.2.1[斷路器&lt;br&gt;1]
N2.2.2---&gt;N2.2.2.1[斷路器&lt;br&gt;15]
</pre>

<span id="more"></span>

<h2 id="拓撲識別"><a href="#拓撲識別" class="headerlink" title="拓撲識別"></a>拓撲識別</h2><p><img src="/sulfurandcu.io/clnyhr2mp002t10rqf5z089pu/topology.standard.1.png" alt="圖片加載失敗"></p>
<p><img src="/sulfurandcu.io/clnyhr2mp002t10rqf5z089pu/topology.standard.2.png" alt="圖片加載失敗"></p>
<p><img src="/sulfurandcu.io/clnyhr2mp002t10rqf5z089pu/topology.standard.3.png" alt="圖片加載失敗"></p>
<div class="note danger no-icon"><p>本文所述的拓撲分析算法針對的是有時間戳的拓撲識別</p>
</div>

<h2 id="拓撲流程"><a href="#拓撲流程" class="headerlink" title="拓撲流程"></a>拓撲流程</h2><pre class="mermaid">
flowchart TB
%%{init: { &quot;flowchart&quot;: { &quot;curve&quot;: &quot;basis&quot; } } }%%
R0[智能融合終端&lt;br&gt;SCU]--&gt;A2[&quot; &quot;]
R0--&gt;A1[斷路器&lt;br&gt;1]
A1--&gt;B2[&quot; &quot;]
A1--&gt;B1[斷路器&lt;br&gt;2]
B1--&gt;C2[&quot; &quot;]
B1--&gt;C1[斷路器&lt;br&gt;3]
</pre>

<p>以上面這個簡單的拓撲結構爲例：</p>
<p>當 SCU 給一號斷路器發送拓撲信號發生指令後一號斷路器會存儲一條發生記錄。</p>
<p>當 SCU 給二號斷路器發送拓撲信號發生指令後二號斷路器會存儲一條發生記錄，此時一號斷路器會識別到拓撲信號並存儲一條識別記錄，並且這兩條記錄中的時間基本一致。</p>
<p>當 SCU 給三號斷路器發送拓撲信號發生指令後三號斷路器會存儲一條發生記錄，此時一號斷路器和二號斷路器均會識別到拓撲信號並存儲一條識別記錄，並且這三條記錄中的時間基本一致。</p>
<p>最終：</p>
<ul>
<li>一號斷路器總計存儲 3 條拓撲記錄；</li>
<li>二號斷路器總計存儲 2 條拓撲記錄；</li>
<li>三號斷路器總計存儲 1 條拓撲記錄；</li>
</ul>
<p>拓撲信號發生流程結束後，智能融合終端會讀取每臺斷路器中的拓撲記錄，並將數據整理爲以下格式：</p>
<p><img src="/sulfurandcu.io/clnyhr2mp002t10rqf5z089pu/topology.record.png" alt="圖片加載失敗"></p>
<p>然後智能融合終端便可通過本算法以及上述數據計算出所有斷路器之間的拓撲關係。</p>
<div class="note info no-icon"><p>記錄數量：每臺斷路器中拓撲記錄的數量<br>記錄內容：每條拓撲記錄產生時的時間戳</p>
</div>

<h2 id="算法概述"><a href="#算法概述" class="headerlink" title="算法概述"></a>算法概述</h2><p><strong>核心思想：從末端節點開始，依次尋找每個節點的父節點，最終找到根節點。最後遞歸打印出拓撲關係。</strong></p>
<p>1. 遍歷只有一條記錄的節點（末端節點）遍歷完之後將末端節點的記錄數量置爲零。</p>
<p>2. 遍歷其他大於一條記錄的節點</p>
<p>3. 判斷該節點是否存在與末端節點時間相同的記錄｜如果存在則表示該節點爲末端節點的潛在父節點（並將該節點的記錄數量減一）</p>
<p>4. 拓撲記錄數量最少的那個節點即爲當前末端節點的父節點</p>
<p>5. 更新拓撲網絡（記錄父節點）</p>
<p>6. 更新修改過的記錄數量｜然後開始下一循環｜直至所有記錄數量爲零爲止</p>
<p>7. 最後可以得到每個節點的父節點是誰（父節點爲自身的即爲根節點，可以存在多個根節點）</p>
<p>8. 將上述數據遞歸打印即可得到期望結果</p>
<h2 id="算法詳解"><a href="#算法詳解" class="headerlink" title="算法詳解"></a>算法詳解</h2><p>這裏通過一個示例來描述該算法的邏輯。</p>
<h3 id="遍歷之前的拓撲結構（示例）"><a href="#遍歷之前的拓撲結構（示例）" class="headerlink" title="遍歷之前的拓撲結構（示例）"></a>遍歷之前的拓撲結構（示例）</h3><pre class="mermaid">
flowchart TB
%%{init: { &quot;flowchart&quot;: { &quot;curve&quot;: &quot;basis&quot; } } }%%
R0[智能融合終端&lt;br&gt;SCU]
R0---&gt;N1[斷路器&lt;br&gt;9]
R0---&gt;N2[斷路器&lt;br&gt;16]
N1---&gt;N1.1[斷路器&lt;br&gt;7]
N1---&gt;N1.2[斷路器&lt;br&gt;6]
N1---&gt;N1.3[斷路器&lt;br&gt;10]
N1---&gt;N1.4[斷路器&lt;br&gt;12]
N2---&gt;N2.1[斷路器&lt;br&gt;18]
N2---&gt;N2.2[斷路器&lt;br&gt;19]
N2---&gt;N2.3[斷路器&lt;br&gt;14]
N1.1---&gt;N1.1.1[斷路器&lt;br&gt;3]
N1.1---&gt;N1.1.2[斷路器&lt;br&gt;4]
N1.1---&gt;N1.1.3[斷路器&lt;br&gt;5]
N1.2---&gt;N1.2.1[斷路器&lt;br&gt;8]
N1.2---&gt;N1.2.2[斷路器&lt;br&gt;11]
N1.3---&gt;N1.3.1[斷路器&lt;br&gt;2]
N2.2---&gt;N2.2.1[斷路器&lt;br&gt;13]
N2.2---&gt;N2.2.2[斷路器&lt;br&gt;17]
N1.1.1---&gt;N1.1.1.1[斷路器&lt;br&gt;0]
N1.2.2---&gt;N1.2.2.1[斷路器&lt;br&gt;1]
N2.2.2---&gt;N2.2.2.1[斷路器&lt;br&gt;15]
</pre>

<h3 id="遍歷之前的數據結構（示例）"><a href="#遍歷之前的數據結構（示例）" class="headerlink" title="遍歷之前的數據結構（示例）"></a>遍歷之前的數據結構（示例）</h3><p><img src="/sulfurandcu.io/clnyhr2mp002t10rqf5z089pu/topology.result.0.svg" alt="圖片加載失敗"></p>
<h3 id="第一次遍歷後的拓撲結構"><a href="#第一次遍歷後的拓撲結構" class="headerlink" title="第一次遍歷後的拓撲結構"></a>第一次遍歷後的拓撲結構</h3><pre class="mermaid">
flowchart TB
%%{init: { &quot;flowchart&quot;: { &quot;curve&quot;: &quot;basis&quot; } } }%%
R0[智能融合終端&lt;br&gt;SCU]
R0---&gt;N1[斷路器&lt;br&gt;9]
R0---&gt;N2[斷路器&lt;br&gt;16]
N1---&gt;N1.1[斷路器&lt;br&gt;7]
N1---&gt;N1.2[斷路器&lt;br&gt;6]
N1---&gt;N1.3[斷路器&lt;br&gt;10]
N1---&gt;N1.4[&quot; &quot;]
N2---&gt;N2.1[&quot; &quot;]
N2---&gt;N2.2[斷路器&lt;br&gt;19]
N2---&gt;N2.3[&quot; &quot;]
N1.1---&gt;N1.1.1[斷路器&lt;br&gt;3]
N1.1---&gt;N1.1.2[&quot; &quot;]
N1.1---&gt;N1.1.3[&quot; &quot;]
N1.2---&gt;N1.2.1[&quot; &quot;]
N1.2---&gt;N1.2.2[斷路器&lt;br&gt;11]
N1.3---&gt;N1.3.1[&quot; &quot;]
N2.2---&gt;N2.2.1[&quot; &quot;]
N2.2---&gt;N2.2.2[斷路器&lt;br&gt;17]
N1.1.1---&gt;N1.1.1.1[&quot; &quot;]
N1.2.2---&gt;N1.2.2.1[&quot; &quot;]
N2.2.2---&gt;N2.2.2.1[&quot; &quot;]
</pre>

<h3 id="第一次遍歷後的數據結構"><a href="#第一次遍歷後的數據結構" class="headerlink" title="第一次遍歷後的數據結構"></a>第一次遍歷後的數據結構</h3><p><img src="/sulfurandcu.io/clnyhr2mp002t10rqf5z089pu/topology.result.1.svg" alt="圖片加載失敗"></p>
<h3 id="第二次遍歷後的拓撲結構"><a href="#第二次遍歷後的拓撲結構" class="headerlink" title="第二次遍歷後的拓撲結構"></a>第二次遍歷後的拓撲結構</h3><pre class="mermaid">
flowchart TB
%%{init: { &quot;flowchart&quot;: { &quot;curve&quot;: &quot;basis&quot; } } }%%
R0[智能融合終端&lt;br&gt;SCU]
R0---&gt;N1[斷路器&lt;br&gt;9]
R0---&gt;N2[斷路器&lt;br&gt;16]
N1---&gt;N1.1[斷路器&lt;br&gt;7]
N1---&gt;N1.2[斷路器&lt;br&gt;6]
N1---&gt;N1.3[&quot; &quot;]
N1---&gt;N1.4[&quot; &quot;]
N2---&gt;N2.1[&quot; &quot;]
N2---&gt;N2.2[斷路器&lt;br&gt;19]
N2---&gt;N2.3[&quot; &quot;]
N1.1---&gt;N1.1.1[&quot; &quot;]
N1.1---&gt;N1.1.2[&quot; &quot;]
N1.1---&gt;N1.1.3[&quot; &quot;]
N1.2---&gt;N1.2.1[&quot; &quot;]
N1.2---&gt;N1.2.2[&quot; &quot;]
N2.2---&gt;N2.2.1[&quot; &quot;]
N2.2---&gt;N2.2.2[&quot; &quot;]
</pre>

<h3 id="第二次遍歷後的數據結構"><a href="#第二次遍歷後的數據結構" class="headerlink" title="第二次遍歷後的數據結構"></a>第二次遍歷後的數據結構</h3><p><img src="/sulfurandcu.io/clnyhr2mp002t10rqf5z089pu/topology.result.2.svg" alt="圖片加載失敗"></p>
<h3 id="第三次遍歷後的拓撲結構"><a href="#第三次遍歷後的拓撲結構" class="headerlink" title="第三次遍歷後的拓撲結構"></a>第三次遍歷後的拓撲結構</h3><pre class="mermaid">
flowchart TB
%%{init: { &quot;flowchart&quot;: { &quot;curve&quot;: &quot;basis&quot; } } }%%
R0[智能融合終端&lt;br&gt;SCU]
R0---&gt;N1[斷路器&lt;br&gt;9]
R0---&gt;N2[斷路器&lt;br&gt;16]
N1---&gt;N1.1[&quot; &quot;]
N1---&gt;N1.2[&quot; &quot;]
N1---&gt;N1.3[&quot; &quot;]
N1---&gt;N1.4[&quot; &quot;]
N2---&gt;N2.1[&quot; &quot;]
N2---&gt;N2.2[&quot; &quot;]
N2---&gt;N2.3[&quot; &quot;]
</pre>

<h3 id="第三次遍歷後的數據結構"><a href="#第三次遍歷後的數據結構" class="headerlink" title="第三次遍歷後的數據結構"></a>第三次遍歷後的數據結構</h3><p><img src="/sulfurandcu.io/clnyhr2mp002t10rqf5z089pu/topology.result.3.svg" alt="圖片加載失敗"></p>
<h3 id="遍歷完成之後得到的數據"><a href="#遍歷完成之後得到的數據" class="headerlink" title="遍歷完成之後得到的數據"></a>遍歷完成之後得到的數據</h3><p><img src="/sulfurandcu.io/clnyhr2mp002t10rqf5z089pu/topology.result.x.png" alt="圖片加載失敗"></p>
<h2 id="核心代碼"><a href="#核心代碼" class="headerlink" title="核心代碼"></a>核心代碼</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 計算拓撲關係</span><br><span class="line">while (HaveData &amp;&amp; HaveDataOneRecord)</span><br><span class="line">&#123;</span><br><span class="line">    HaveData = false;</span><br><span class="line">    HaveDataOneRecord = false;</span><br><span class="line"></span><br><span class="line">    for (int idx = 0; idx &lt; TOPO_NODE_NUM; ++idx)</span><br><span class="line">    &#123;</span><br><span class="line">        unsigned int MinNum = 0xFFFFFFFF;</span><br><span class="line">        unsigned int MinIdx = idx;</span><br><span class="line"></span><br><span class="line">        if (TopoNum[idx] &gt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            HaveData = true;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (TopoNum[idx] == 1) // 遍歷只有一條記錄的節點（末端節點）</span><br><span class="line">        &#123;</span><br><span class="line">            HaveDataOneRecord = true;</span><br><span class="line"></span><br><span class="line">            TopoNumMod[idx]--;</span><br><span class="line"></span><br><span class="line">            for (int i = 0; i &lt; TOPO_NODE_NUM; ++i)</span><br><span class="line">            &#123;</span><br><span class="line">                if (TopoNum[i] &lt;= 1) // 遍歷其他大於一條記錄的節點</span><br><span class="line">                &#123;</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                for (int n = 1; n &lt;= TopoSrc[i][0]; ++n) // 判斷該節點是否存在與末端節點時間相同的記錄</span><br><span class="line">                &#123;</span><br><span class="line">                    if (TimeCompare(TopoSrc[idx][1], TopoSrc[i][n], TOPO_TIME_BIAS)) // 4example bias==3 (±3s)</span><br><span class="line">                    &#123;</span><br><span class="line">                        // 如果存在則表示該節點爲末端節點的潛在父節點（並將該節點的記錄數量減一）</span><br><span class="line">                        TopoNumMod[i]--;</span><br><span class="line">                        if (TopoSrc[i][0] &lt; MinNum)</span><br><span class="line">                        &#123;</span><br><span class="line">                            MinNum = TopoSrc[i][0];</span><br><span class="line">                            MinIdx = i; // 查找拓撲記錄數量最少的節點</span><br><span class="line">                            break;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            TopoNet[idx] = MinIdx; // 拓撲記錄數量最少的那個節點即爲當前末端節點的父節點</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 經過上述步驟，拓撲記錄數量爲一的節點的記錄數量被清零，同時又重新生成了一批新的拓撲記錄數量爲一的節點。</span><br><span class="line">    // 這裏更新中間變量，然後繼續上述步驟：遍歷新的只有一條記錄的節點（新的末端節點），直至遍歷完畢。</span><br><span class="line">    memcpy(TopoNum, TopoNumMod, sizeof(TopoNum));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="遞歸打印"><a href="#遞歸打印" class="headerlink" title="遞歸打印"></a>遞歸打印</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">void TopoPrint(unsigned int root, unsigned int *node, int node_num) // *node : 節點關係（所有節點的父節點信息）</span><br><span class="line">&#123;</span><br><span class="line">    static int depth = 1;</span><br><span class="line"></span><br><span class="line">    FILE * fp;</span><br><span class="line"></span><br><span class="line">    for (int i = 0; i &lt; node_num; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        if (node[i] == root)</span><br><span class="line">        &#123;</span><br><span class="line">            fp = fopen(TOPO_FILE_PATH, &quot;a+&quot;);</span><br><span class="line"></span><br><span class="line">            // 根節點禁止遞歸</span><br><span class="line">            if (i == root)</span><br><span class="line">            &#123;</span><br><span class="line">                fclose(fp);</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            printf(&quot;|---&quot;);</span><br><span class="line"></span><br><span class="line">            for (int d = 0; d &lt; depth; ++d)</span><br><span class="line">            &#123;</span><br><span class="line">                #if (ENABLE_PRINT)</span><br><span class="line">                printf(&quot;|---&quot;);</span><br><span class="line">                #endif</span><br><span class="line">                #if (ENABLE_PRINT_TO_FILE)</span><br><span class="line">                fprintf(fp, &quot;|---&quot;);</span><br><span class="line">                #endif</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // 打印序號</span><br><span class="line">            #if (ENABLE_PRINT)</span><br><span class="line">            printf(&quot;%-8d&quot;, i);</span><br><span class="line">            printf(TOPO_ALIGN_STR);</span><br><span class="line">            #endif</span><br><span class="line">            #if (ENABLE_PRINT_TO_FILE)</span><br><span class="line">            fprintf(fp, &quot;%-8d&quot;, i);</span><br><span class="line">            fprintf(fp, TOPO_ALIGN_STR);</span><br><span class="line">            #endif</span><br><span class="line"></span><br><span class="line">            // 打印地址</span><br><span class="line">            for (int len = 0; len &lt; 6; ++len)</span><br><span class="line">            &#123;</span><br><span class="line">                #if (ENABLE_PRINT)</span><br><span class="line">                printf(&quot;%02X&quot;, TopoDev[i][len]);</span><br><span class="line">                #endif</span><br><span class="line">                #if (ENABLE_PRINT_TO_FILE)</span><br><span class="line">                fprintf(fp, &quot;%02X&quot;, TopoDev[i][len]);</span><br><span class="line">                #endif</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // 打印換行</span><br><span class="line">            #if (ENABLE_PRINT)</span><br><span class="line">            printf(&quot;\r\n&quot;);</span><br><span class="line">            #endif</span><br><span class="line">            #if (ENABLE_PRINT_TO_FILE)</span><br><span class="line">            fprintf(fp, &quot;\n&quot;);</span><br><span class="line">            #endif</span><br><span class="line"></span><br><span class="line">            fclose(fp);</span><br><span class="line"></span><br><span class="line">            // 遞歸調用</span><br><span class="line">            depth++;</span><br><span class="line">            TopoPrint(i, node, node_num);</span><br><span class="line">            depth--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>開發筆記</category>
      </categories>
      <tags>
        <tag>拓撲識別</tag>
        <tag>拓撲分析</tag>
      </tags>
  </entry>
  <entry>
    <title>編寫一個根據 svn 提交記錄自動生成日報的腳本</title>
    <url>/sulfurandcu.io/clnyhr2mp002w10rq4yxkans0.html</url>
    <content><![CDATA[<center>beep...領導要求每天寫日報，但是我不太想寫，於是就有了本段代碼。</center><br>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 一鍵生成日報 V2.0.0</span><br><span class="line">import os</span><br><span class="line">import re</span><br><span class="line">import datetime</span><br><span class="line">from datetime import timedelta</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 一鍵生成日報 V2.0.0</span><br><span class="line">import os</span><br><span class="line">import re</span><br><span class="line">import datetime</span><br><span class="line">from datetime import timedelta</span><br><span class="line"></span><br><span class="line"># 是否完成</span><br><span class="line">funccode = 0</span><br><span class="line"></span><br><span class="line"># 任務名稱</span><br><span class="line">taskname = &quot;編碼工作&quot;</span><br><span class="line"># 基準日期</span><br><span class="line">basedate = datetime.datetime.now() - timedelta(days=0)</span><br><span class="line"># 過去幾天</span><br><span class="line">lastnday = 1</span><br><span class="line"># 查詢深度</span><br><span class="line">userdeep = &quot;100&quot;</span><br><span class="line"># 用戶名稱</span><br><span class="line">username = &quot;liujitong&quot;</span><br><span class="line"># 用戶路徑</span><br><span class="line">userpath = &quot;http://svn.sulfurandcu.com&quot;</span><br><span class="line"></span><br><span class="line">TEXT = &quot;&quot;</span><br><span class="line">for i in range(0, lastnday):</span><br><span class="line">    svn_find = &quot;--search-and &quot; + username + &quot; --search-and &quot; + (basedate - timedelta(days=i)).strftime(&quot;%Y-%m-%d&quot;)</span><br><span class="line">    svn_deep = &quot;--limit &quot; + userdeep</span><br><span class="line">    cmd = &quot;svn log &quot; + svn_deep + &quot; &quot; + svn_find + &quot; &quot; + userpath + &quot; --non-interactive&quot;</span><br><span class="line">    with os.popen(cmd) as f:</span><br><span class="line">        text = f.read()</span><br><span class="line"></span><br><span class="line">        rere = re.compile(&quot;\n------------------------------------------------------------------------&quot;)</span><br><span class="line">        text = rere.sub(&quot;&quot;, text)</span><br><span class="line"></span><br><span class="line">        rere = re.compile(&quot;r.* \| &quot; + username + &quot; \| &quot;)</span><br><span class="line">        text = rere.sub(&quot;&quot;, text)</span><br><span class="line"></span><br><span class="line">        rere = re.compile(&quot;\) \| .*line\n&quot;)</span><br><span class="line">        text = rere.sub(&quot;)&quot;, text)</span><br><span class="line"></span><br><span class="line">        rere = re.compile(&quot;\) \| .*lines\n&quot;)</span><br><span class="line">        text = rere.sub(&quot;)&quot;, text)</span><br><span class="line"></span><br><span class="line">        rere = re.compile(&quot;\n&quot;)</span><br><span class="line">        text = rere.sub(&quot;\n　　　　　&quot;, text)</span><br><span class="line"></span><br><span class="line">        rere = re.compile(&quot;------------------------------------------------------------------------\n&quot;)</span><br><span class="line">        text = rere.sub(&quot;&quot;, text)</span><br><span class="line"></span><br><span class="line">        text = text + &quot;EOF&quot;</span><br><span class="line"></span><br><span class="line">        rere = re.compile(&quot;　　　　　EOF&quot;)</span><br><span class="line">        text = rere.sub(&quot;&quot;, text)</span><br><span class="line"></span><br><span class="line">        rere = re.compile(&quot;\n　　　　　\n&quot;)</span><br><span class="line">        text = rere.sub(&quot;\n&quot;, text)</span><br><span class="line"></span><br><span class="line">        rere = re.compile(&quot; \+0800.*\)\n&quot;)</span><br><span class="line">        text = rere.sub(&quot;\n&quot;, text)</span><br><span class="line"></span><br><span class="line">        if funccode == 1:</span><br><span class="line">            text = &quot;任務名稱：&quot; + taskname + &quot;\n工作內容：\n&quot; + text</span><br><span class="line">            text = text + &quot;是否完成：是&quot;</span><br><span class="line"></span><br><span class="line">        if funccode == 0:</span><br><span class="line">            if (basedate.weekday() == 0):</span><br><span class="line">                deadline = basedate + timedelta(days=4)</span><br><span class="line">            if (basedate.weekday() == 1):</span><br><span class="line">                deadline = basedate + timedelta(days=3)</span><br><span class="line">            if (basedate.weekday() == 2):</span><br><span class="line">                deadline = basedate + timedelta(days=2)</span><br><span class="line">            if (basedate.weekday() == 3):</span><br><span class="line">                deadline = basedate + timedelta(days=1)</span><br><span class="line">            if (basedate.weekday() == 4):</span><br><span class="line">                deadline = basedate + timedelta(days=7)</span><br><span class="line">            if (basedate.weekday() == 5):</span><br><span class="line">                deadline = basedate + timedelta(days=6)</span><br><span class="line">            if (basedate.weekday() == 6):</span><br><span class="line">                deadline = basedate + timedelta(days=5)</span><br><span class="line"></span><br><span class="line">            deadline = deadline.strftime(&quot;%Y年%m月%d日&quot;)</span><br><span class="line"></span><br><span class="line">            text = &quot;任務名稱：&quot; + taskname + &quot;\n工作內容：\n&quot; + text</span><br><span class="line">            text = text + &quot;是否完成：否（計劃&quot; + deadline + &quot;完成）&quot;</span><br><span class="line"></span><br><span class="line">        TEXT = TEXT + text</span><br><span class="line"></span><br><span class="line">        if i &lt; lastnday-1:</span><br><span class="line">            TEXT = TEXT + &quot;\n\n&quot;</span><br><span class="line"></span><br><span class="line">filename = &quot;ooooooDailyGenerator.py.&quot; + username + &quot;.txt&quot;</span><br><span class="line">with open(filename, &#x27;w&#x27;, encoding=&#x27;utf-8&#x27;) as f:</span><br><span class="line">    f.write(TEXT)</span><br><span class="line"></span><br><span class="line"># input()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>效率提升</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>svn</tag>
      </tags>
  </entry>
  <entry>
    <title>crc-libc</title>
    <url>/sulfurandcu.io/clnyhr2mq002z10rqddw83ul7.html</url>
    <content><![CDATA[<center><a href="https://github.com/sulfurandcu/crc-lib">https://github.com/sulfurandcu/crc-lib</a></center><br>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * brief: width=16 poly=0x8005 init=0x0000 refin=1 refout=1 xorout=0x0000 check=0xbb3d residue=0x0000</span><br><span class="line"> * class: attested</span><br><span class="line"> * alias: CRC-16, CRC-16/ARC, CRC-16/IBM, CRC-16/LHA</span><br><span class="line"> */</span><br><span class="line">CRC_16_8005_0000_1_1_0000, // check=0xbb3d</span><br><span class="line">CRC_16_ARC,</span><br><span class="line">CRC_16_IBM,</span><br><span class="line">CRC_16_LHA,</span><br><span class="line">/**</span><br><span class="line"> * brief: width=16 poly=0x8005 init=0x0000 refin=0 refout=0 xorout=0x0000 check=0xfee8 residue=0x0000</span><br><span class="line"> * class: attested</span><br><span class="line"> * alias: CRC-16/UMTS, CRC-16/BUYPASS, CRC-16/VERIFONE</span><br><span class="line"> */</span><br><span class="line">CRC_16_8005_0000_0_0_0000, // check=0xfee8</span><br><span class="line">CRC_16_UMTS,</span><br><span class="line">CRC_16_BUYPASS,</span><br><span class="line">CRC_16_VERIFONE,</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p><strong>目前支持的 crc 種類有：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">typedef enum crc_16_type_t</span><br><span class="line">&#123;</span><br><span class="line">    #if crc_16_poly_8005_enable</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x8005 init=0x0000 refin=1 refout=1 xorout=0x0000 check=0xbb3d residue=0x0000</span><br><span class="line">     * class: attested</span><br><span class="line">     * alias: CRC-16, CRC-16/ARC, CRC-16/IBM, CRC-16/LHA</span><br><span class="line">     */</span><br><span class="line">    CRC_16_8005_0000_1_1_0000, // check=0xbb3d</span><br><span class="line">    CRC_16_ARC,</span><br><span class="line">    CRC_16_IBM,</span><br><span class="line">    CRC_16_LHA,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x8005 init=0x0000 refin=0 refout=0 xorout=0x0000 check=0xfee8 residue=0x0000</span><br><span class="line">     * class: attested</span><br><span class="line">     * alias: CRC-16/UMTS, CRC-16/BUYPASS, CRC-16/VERIFONE</span><br><span class="line">     */</span><br><span class="line">    CRC_16_8005_0000_0_0_0000, // check=0xfee8</span><br><span class="line">    CRC_16_UMTS,</span><br><span class="line">    CRC_16_BUYPASS,</span><br><span class="line">    CRC_16_VERIFONE,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x8005 init=0x0000 refin=1 refout=1 xorout=0xFFFF check=0x44c2 residue=0xb001</span><br><span class="line">     * class: attested</span><br><span class="line">     * alias: CRC-16/MAXIM, CRC-16/MAXIM-DOW</span><br><span class="line">     */</span><br><span class="line">    CRC_16_8005_0000_1_1_FFFF, // check=0x44c2</span><br><span class="line">    CRC_16_MAXIM,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x8005 init=0xFFFF refin=1 refout=1 xorout=0x0000 check=0x4b37 residue=0x0000</span><br><span class="line">     * class: attested</span><br><span class="line">     * alias: CRC-16/MODBUS</span><br><span class="line">     */</span><br><span class="line">    CRC_16_8005_FFFF_1_1_0000, // check=0x4b37</span><br><span class="line">    CRC_16_MODBUS,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x8005 init=0x800D refin=0 refout=0 xorout=0x0000 check=0x9ecf residue=0x0000</span><br><span class="line">     * class: attested</span><br><span class="line">     * alias: CRC-16/DDS-110</span><br><span class="line">     */</span><br><span class="line">    CRC_16_8005_800D_0_0_0000, // check=0x9ecf</span><br><span class="line">    CRC_16_DDS110,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x8005 init=0xFFFF refin=1 refout=1 xorout=0xFFFF check=0xb4c8 residue=0xb001</span><br><span class="line">     * class: third-party</span><br><span class="line">     * alias: CRC-16/USB</span><br><span class="line">     */</span><br><span class="line">    CRC_16_8005_FFFF_1_1_FFFF, // check=0xb4c8</span><br><span class="line">    CRC_16_USB,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x8005 init=0xFFFF refin=0 refout=0 xorout=0x0000 check=0xaee7 residue=0x0000</span><br><span class="line">     * class: third-party</span><br><span class="line">     * alias: CRC-16/CMS</span><br><span class="line">     */</span><br><span class="line">    CRC_16_8005_FFFF_0_0_0000, // check=0xaee7</span><br><span class="line">    CRC_16_CMS,</span><br><span class="line">    #endif</span><br><span class="line">    #if crc_16_poly_1021_enable</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x1021 init=0xFFFF refin=0 refout=0 xorout=0xFFFF check=0xd64e residue=0x1d0f</span><br><span class="line">     * class: attested</span><br><span class="line">     * alias: CRC-16/GENIBUS, CRC-16/DARC, CRC-16/EPC, CRC-16/EPC-C1G2, CRC-16/I-CODE</span><br><span class="line">     */</span><br><span class="line">    CRC_16_1021_FFFF_0_0_FFFF, // check=0xd64e</span><br><span class="line">    CRC_16_GENIBUS,</span><br><span class="line">    CRC_16_DARC,</span><br><span class="line">    CRC_16_EPC,</span><br><span class="line">    CRC_16_EPC_C1G2,</span><br><span class="line">    CRC_16_ICODE,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x1021 init=0x0000 refin=0 refout=0 xorout=0xFFFF check=0xce3c residue=0x1d0f</span><br><span class="line">     * class: attested</span><br><span class="line">     * alias: CRC-16/GSM</span><br><span class="line">     */</span><br><span class="line">    CRC_16_1021_0000_0_0_FFFF, // check=0xce3c</span><br><span class="line">    CRC_16_GSM,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x1021 init=0xFFFF refin=0 refout=0 xorout=0x0000 check=0x29b1 residue=0x0000</span><br><span class="line">     * class: attested</span><br><span class="line">     * alias: CRC-16/CCITT-FALSE, CRC-16/IBM-3740, CRC-16/AUTOSAR</span><br><span class="line">     */</span><br><span class="line">    CRC_16_1021_FFFF_0_0_0000, // check=0x29b1</span><br><span class="line">    CRC_16_CCITT_FALSE,</span><br><span class="line">    CRC_16_IBM_3740,</span><br><span class="line">    CRC_16_AUTOSAR,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x1021 init=0xFFFF refin=1 refout=1 xorout=0xFFFF check=0x906e residue=0xf0b8</span><br><span class="line">     * class: attested</span><br><span class="line">     * alias: CRC-16/X-25, CRC-16/IBM-SDLC, CRC-16/ISO-HDLC, CRC-16/ISO-IEC-14443-3-B, CRC-B</span><br><span class="line">     */</span><br><span class="line">    CRC_16_1021_FFFF_1_1_FFFF, // check=0x906e</span><br><span class="line">    CRC_16_X25,</span><br><span class="line">    CRC_16_IBM_SDLC,</span><br><span class="line">    CRC_16_ISO_HDLC,</span><br><span class="line">    CRC_16_ISO_IEC_14443_3_B,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x1021 init=0xC6C6 refin=1 refout=1 xorout=0x0000 check=0xbf05 residue=0x0000</span><br><span class="line">     * class: attested</span><br><span class="line">     * alias: CRC-16/ISO-IEC-14443-3-A, CRC-A</span><br><span class="line">     */</span><br><span class="line">    CRC_16_1021_C6C6_1_1_0000, // check=0xbf05</span><br><span class="line">    CRC_16_ISO_IEC_14443_3_A,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x1021 init=0x0000 refin=1 refout=1 xorout=0x0000 check=0x2189 residue=0x0000</span><br><span class="line">     * class: attested</span><br><span class="line">     * alias: CRC-16/CCITT, CRC-16/CCITT-TRUE, CRC-16/KERMIT, CRC-16/BLUETOOTH, CRC-16/V-41-LSB</span><br><span class="line">     */</span><br><span class="line">    CRC_16_1021_0000_1_1_0000, // check=0x2189</span><br><span class="line">    CRC_16_CCITT,</span><br><span class="line">    CRC_16_CCITT_TRUE,</span><br><span class="line">    CRC_16_KERMIT,</span><br><span class="line">    CRC_16_BLUETOOTH,</span><br><span class="line">    CRC_16_V_41_LSB,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x1021 init=0xFFFF refin=1 refout=1 xorout=0x0000 check=0x6f91 residue=0x0000</span><br><span class="line">     * class: attested</span><br><span class="line">     * alias: CRC-16/MCRF4XX</span><br><span class="line">     */</span><br><span class="line">    CRC_16_1021_FFFF_1_1_0000, // check=0x6f91</span><br><span class="line">    CRC_16_MCRF4XX,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x1021 init=0xB2AA refin=1 refout=1 xorout=0x0000 check=0x63d0 residue=0x0000</span><br><span class="line">     * class: third-party</span><br><span class="line">     * alias: CRC-16/RIELLO</span><br><span class="line">     */</span><br><span class="line">    CRC_16_1021_B2AA_1_1_0000, // check=0x63d0</span><br><span class="line">    CRC_16_RIELLO,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x1021 init=0x1D0F refin=0 refout=0 xorout=0x0000 check=0xe5cc residue=0x0000</span><br><span class="line">     * class: attested</span><br><span class="line">     * alias: CRC-16/AUG-CCITT, CRC-16/SPI-FUJITSU</span><br><span class="line">     */</span><br><span class="line">    CRC_16_1021_1D0F_0_0_0000, // check=0xe5cc</span><br><span class="line">    CRC_16_AUG_CCITT,</span><br><span class="line">    CRC_16_SPI_FUJITSU,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x1021 init=0x0000 refin=0 refout=0 xorout=0x0000 check=0x31c3 residue=0x0000</span><br><span class="line">     * class: attested</span><br><span class="line">     * alias: CRC-16/XMODEM, CRC-16/ACORN, CRC-16/LTE, CRC-16/V-41-MSB, XMODEM, YMODEM, ZMODEM</span><br><span class="line">     */</span><br><span class="line">    CRC_16_1021_0000_0_0_0000, // check=0x31c3</span><br><span class="line">    CRC_16_XMODEM,</span><br><span class="line">    CRC_16_YMODEM,</span><br><span class="line">    CRC_16_ZMODEM,</span><br><span class="line">    CRC_16_ACORN,</span><br><span class="line">    CRC_16_LTE,</span><br><span class="line">    CRC_16_V_41_MSB,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x1021 init=0x89EC refin=1 refout=1 xorout=0x0000 check=0x26b1 residue=0x0000</span><br><span class="line">     * class: attested</span><br><span class="line">     * alias: CRC-16/TMS37157</span><br><span class="line">     */</span><br><span class="line">    CRC_16_1021_89EC_1_1_0000, // check=0x26b1</span><br><span class="line">    CRC_16_TMS37157,</span><br><span class="line">    #endif</span><br><span class="line">    #if crc_16_poly_xxxx_enable</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x0589 init=0x0000 refin=0 refout=0 xorout=0x0001 check=0x007e residue=0x0589</span><br><span class="line">     * class: attested</span><br><span class="line">     * alias: CRC-16/DECT-R, R-CRC-16</span><br><span class="line">     */</span><br><span class="line">    CRC_16_0589_0000_0_0_0001, // check=0x007e</span><br><span class="line">    CRC_16_DECT_R,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x0589 init=0x0000 refin=0 refout=0 xorout=0x0000 check=0x007f residue=0x0000</span><br><span class="line">     * class: attested</span><br><span class="line">     * alias: CRC-16/DECT-X, X-CRC-16</span><br><span class="line">     */</span><br><span class="line">    CRC_16_0589_0000_0_0_0000, // check=0x007f</span><br><span class="line">    CRC_16_DECT_X,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x8bb7 init=0x0000 refin=0 refout=0 xorout=0x0000 check=0xd0db residue=0x0000</span><br><span class="line">     * class: attested</span><br><span class="line">     * alias: CRC-16/T10-DIF</span><br><span class="line">     */</span><br><span class="line">    CRC_16_8BB7_0000_0_0_0000, // check=0xd0db</span><br><span class="line">    CRC_16_T10_DIF,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x3D65 init=0x0000 refin=1 refout=1 xorout=0xFFFF check=0xea82 residue=0x66c5</span><br><span class="line">     * class: confirmed</span><br><span class="line">     * alias: CRC-16/DNP</span><br><span class="line">     */</span><br><span class="line">    CRC_16_3D65_0000_1_1_FFFF, // check=0xea82</span><br><span class="line">    CRC_16_DNP,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0x3d65 init=0x0000 refin=0 refout=0 xorout=0xFFFF check=0xc2b7 residue=0xa366</span><br><span class="line">     * class: confirmed</span><br><span class="line">     * alias: CRC-16/EN-13757</span><br><span class="line">     */</span><br><span class="line">    CRC_16_3D65_0000_0_0_FFFF, // check=0xc2b7</span><br><span class="line">    CRC_16_EN_13757,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0xa097 init=0x0000 refin=0 refout=0 xorout=0x0000 check=0x0fb3 residue=0x0000</span><br><span class="line">     * class: confirmed</span><br><span class="line">     * alias: CRC-16/TELEDISK</span><br><span class="line">     */</span><br><span class="line">    CRC_16_A097_0000_0_0_0000, // check=0x0fb3</span><br><span class="line">    CRC_16_TELEDISK,</span><br><span class="line">    /**</span><br><span class="line">     * brief: width=16 poly=0xc867 init=0xFFFF refin=0 refout=0 xorout=0x0000 check=0x4c06 residue=0x0000</span><br><span class="line">     * class: academic</span><br><span class="line">     * alias: CRC-16/CDMA2000</span><br><span class="line">     */</span><br><span class="line">    CRC_16_C867_FFFF_0_0_0000, // check=0x4c06</span><br><span class="line">    CRC_16_CDMA2000,</span><br><span class="line">    #endif</span><br><span class="line">&#125; crc_16_type_t;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>開發筆記</category>
      </categories>
      <tags>
        <tag>crc</tag>
        <tag>循環冗餘校驗算法</tag>
      </tags>
  </entry>
  <entry>
    <title>LilyPond</title>
    <url>/sulfurandcu.io/clnyhr2mr003410rq5kcs69uj.html</url>
    <content><![CDATA[<p>LilyPond 是什麼？(<strong><a href="https://lilypond.org/">https://lilypond.org/</a></strong>)</p>
<blockquote>
<p>LilyPond (荷花池) 是一個音樂雕版軟件，致力產生最高質量的樂譜。它把傳統音樂雕版印刷的美學，呈現在計算機打印的樂譜上。LilyPond 是自由軟件，也是 GNU Project 的一部分。</p>
</blockquote>
<p>計算機軟件的內核是將接收到的數據進行計算並輸出，LilyPond 也不例外。我們需要按照 LilyPond 開發者制定的規則編寫樂譜源碼，然後使用 LilyPond 程序將源代碼轉換爲 PNG、PDF、SVG、MIDI 等格式的文件。</p>
<p><strong>荷花池（線譜）的運作流程如下：</strong></p>
<ol>
<li>按照 lilypond 開發者制定的規則編寫「LilyPond 樂譜源碼」。</li>
<li>使用 lilypond 程序將「LilyPond 樂譜源碼」轉換爲我們期望的「樂譜」文件。</li>
</ol>
<div class="note info no-icon"><p>這裏的 lilypond.exe 程序與我們日常使用的軟件有所不同，需要通過命令行的方式來調用執行。</p>
</div>

<p>不過 LilyPond 主要用於生成五線譜，若想生成簡譜我們還需要藉助另外一個工具：</p>
<p><img src="/sulfurandcu.io/clnyhr2mr003410rq5kcs69uj/jianpuly.png" alt="圖片加載失敗"></p>
<p>與上面不同，我們不再按照 LilyPond 的規則編寫「LilyPond 樂譜源碼」而是按照 jianpuly 開發者制定的規則編寫「Jianpuly 簡譜源碼」。</p>
<p><strong>荷花池（簡譜）的運作流程如下：</strong></p>
<ol>
<li>按照 jianpuly 開發者制定的規則編寫「Jianpuly 簡譜源碼」。</li>
<li>使用 jianpuly 腳本將「Jianpuly 簡譜源碼」轉換爲「LilyPond 樂譜源碼」。</li>
<li>使用 lilypond 程序將「LilyPond 樂譜源碼」轉換爲我們期望的「樂譜」文件。</li>
</ol>
<div class="note info no-icon"><p>與 lilypond 類似，jianpu-ly.py 需要通過命令行的方式經 python 調用執行。</p>
</div>

<span id="more"></span>

<h2 id="軟件下載"><a href="#軟件下載" class="headerlink" title="軟件下載"></a>軟件下載</h2><p><strong>1. 下載 lilypond 壓縮包</strong></p>
<p><img src="/sulfurandcu.io/clnyhr2mr003410rq5kcs69uj/lilypond-download.png" alt="圖片加載失敗"></p>
<center><a href="https://lilypond.org/download.html">下載鏈接</a></center><br>

<p><strong>2. 下載 jianpu-ly.py 腳本文件</strong></p>
<p><img src="/sulfurandcu.io/clnyhr2mr003410rq5kcs69uj/jianpuly-download.png" alt="圖片加載失敗"></p>
<center><a href="http://ssb22.user.srcf.net/mwrhome/jianpu-ly.html">下載鏈接</a></center><br>

<h2 id="軟件安裝"><a href="#軟件安裝" class="headerlink" title="軟件安裝"></a>軟件安裝</h2><p><strong>1. 將下載好的 lilypond 壓縮包解壓至任意位置</strong></p>
<p><strong>2. 將下載好的 jianpu-ly.py 剪切至 lilypond 解壓目錄下的 bin 文件夾中</strong></p>
<p><img src="/sulfurandcu.io/clnyhr2mr003410rq5kcs69uj/lilypond-install-unpack.png" alt="圖片加載失敗"></p>
<p><strong>3. 將 lilypond 安裝目錄下的 bin 文件夾添加至系統環境變量 PATH 中</strong></p>
<p><strong>第一步：搜索「環境變量」然後點擊「編輯系統環境變量」</strong></p>
<p><img src="/sulfurandcu.io/clnyhr2mr003410rq5kcs69uj/lilypond-install-systempath1.png" alt="圖片加載失敗"></p>
<p><strong>第二步：點擊「環境變量」按鈕</strong></p>
<p><img src="/sulfurandcu.io/clnyhr2mr003410rq5kcs69uj/lilypond-install-systempath2.png" alt="圖片加載失敗"></p>
<p><strong>第三步：選中系統變量中的「PATH」然後點擊下方的「編輯」按鈕</strong></p>
<p><img src="/sulfurandcu.io/clnyhr2mr003410rq5kcs69uj/lilypond-install-systempath3.png" alt="圖片加載失敗"></p>
<p><strong>第四步：點擊「新建」按鈕然後輸入之前解壓的 lilypond 的完整路徑</strong></p>
<p><img src="/sulfurandcu.io/clnyhr2mr003410rq5kcs69uj/lilypond-install-systempath4.png" alt="圖片加載失敗"></p>
<p><strong>4. 驗證 lilypond 是否正常安裝</strong></p>
<p><strong>第一步：按下「Win+R」鍵打開運行對話框然後輸入 cmd 並運行</strong></p>
<p><img src="/sulfurandcu.io/clnyhr2mr003410rq5kcs69uj/lilypond-install-verify-cmd.png" alt="圖片加載失敗"></p>
<p><strong>第二步：輸入「lilypond –help」然後按下回車鍵</strong></p>
<p><img src="/sulfurandcu.io/clnyhr2mr003410rq5kcs69uj/lilypond-help.png" alt="圖片加載失敗"></p>
<p>如果你能看到上圖中的信息，那麼恭喜，安裝完成！下面可以嘗試製作一個簡單的樂譜了！</p>
<br>

<h2 id="線譜製作"><a href="#線譜製作" class="headerlink" title="線譜製作"></a>線譜製作</h2><p>寫到這裏時發現了一篇非常不錯的 lilypond 中文入門教程，既然如此，那我索性就偷個懶，各位看官請移步這裏：</p>
<center><a href="https://www.yuque.com/qqbunny/lilypond">《LilyPond 入門教程》 by 兔子不咬人</a></center><br>

<h2 id="簡譜製作"><a href="#簡譜製作" class="headerlink" title="簡譜製作"></a>簡譜製作</h2><p><strong>1. 新建一個文件夾作爲工作空間</strong></p>
<p><strong>2. 將 jianpu-ly.py 腳本文件拷貝至工作空間</strong></p>
<p><strong>3. 在工作空間中創建一個文本文檔（例如：簡譜代碼.txt）然後寫入以下內容</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%% tempo: 4=60</span><br><span class="line">title=標題</span><br><span class="line">1=C</span><br><span class="line">2/4</span><br><span class="line"></span><br><span class="line">1 2 3 4 5 6 7 1&#x27;</span><br></pre></td></tr></table></figure>

<p><strong>4. 在工作空間中單擊右鍵選擇「在終端中打開」然後會彈出一個黑框框</strong></p>
<p><strong>5. 輸入以下命令並然後按回車鍵執行</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python jianpu-ly.py 簡譜代碼.txt &gt; 樂譜代碼.ly</span><br></pre></td></tr></table></figure>

<p><strong>6. 輸入以下命令並然後按回車鍵執行</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lilypond -o 樂譜文件 --format=pdf,png 樂譜代碼.ly</span><br></pre></td></tr></table></figure>

<p><strong>7. 嫌麻煩的話也可以在工作空間中新建一個「自動腳本.bat」批處理文件並填入以下內容</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chcp 65001</span><br><span class="line"></span><br><span class="line">set jianpuly=&quot;D:\develop.r.1\lilypond-2.24.1\bin\jianpu-ly.py&quot;</span><br><span class="line"></span><br><span class="line">set source=&quot;簡譜&quot;</span><br><span class="line">set output=&quot;曲譜&quot;</span><br><span class="line"></span><br><span class="line">set middle=&quot;荷花&quot;</span><br><span class="line"></span><br><span class="line">python %jianpuly% %source%.txt &gt; %middle%.ly</span><br><span class="line">lilypond -o %output% --format=pdf,png %middle%.ly</span><br><span class="line">lilypond -o %output% --format=svg %middle%.ly</span><br><span class="line"></span><br><span class="line">md %source%</span><br><span class="line"></span><br><span class="line">move .\%output%.* .\%source%</span><br><span class="line">move .\%middle%.* .\%source%</span><br></pre></td></tr></table></figure>

<p><strong>8. 以後只要雙擊該腳本即可自動生成</strong></p>
<div class="note info no-icon"><p>使用這種方式時，文件名就不能隨便起了，必須與「source」字段保持一致。</p>
</div>

<h2 id="簡譜規則"><a href="#簡譜規則" class="headerlink" title="簡譜規則"></a>簡譜規則</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Scale going up                                              1 2 3 4 5 6 7 1&#x27;</span><br><span class="line">Accidentals                                                 1 #1 2 b2 1</span><br><span class="line">Octaves                                                     1,, 1, 1 1&#x27; 1&#x27;&#x27;</span><br><span class="line">Shortcuts for 1’ and 2’                                     8 9</span><br><span class="line">Semiquaver, quaver, crotchet (16/8/4th notes)               s1 q1 1</span><br><span class="line">Dotted versions of the above (50% longer)                   s1. q1. 1.</span><br><span class="line">Demisemiquaver, hemidemisemiquaver (32/64th notes)          d1 h1</span><br><span class="line">Minims (half notes) use dashes                              1 -</span><br><span class="line">Dotted minim                                                1 - -</span><br><span class="line">Semibreve (whole note)                                      1 - - -</span><br><span class="line">Time signature                                              4/4</span><br><span class="line">Time signature with quaver anacrusis (8th-note pickup)      4/4,8</span><br><span class="line">Key signature (major)                                       1=Bb</span><br><span class="line">Key signature (minor)                                       6=F#</span><br><span class="line">Tempo                                                       4=85</span><br><span class="line">Lyrics                                                      L: here are the syl- la- bles (all on one line)</span><br><span class="line">Lyrics (verse 1)                                            L: 1. Here is verse one</span><br><span class="line">Lyrics (verse 2)                                            L: 2. Here is verse two</span><br><span class="line">Hanzi lyrics (auto space)                                   H: hanzi (with or without spaces)</span><br><span class="line">Lilypond headers                                            title=the title (on a line of its own)</span><br><span class="line">Multiple parts                                              NextPart</span><br><span class="line">Instrument of current part                                  instrument=Flute (on a line of its own)</span><br><span class="line">Multiple movements                                          NextScore</span><br><span class="line">Prohibit page breaks until end of this movement             OnePage</span><br><span class="line">Suppress bar numbers                                        NoBarNums</span><br><span class="line">Old-style time signature                                    SeparateTimesig 1=C 4/4</span><br><span class="line">Indonesian ‘not angka’ style                                angka</span><br><span class="line">Add a Western staff doubling the tune                       WithStaff</span><br><span class="line">Tuplets                                                     3[ q1 q1 q1 ]</span><br><span class="line">Grace notes before                                          g[#45] 1</span><br><span class="line">Grace notes after                                           1 [&#x27;1]g</span><br><span class="line">Simple chords                                               135 1 13 1</span><br><span class="line">Da capo                                                     1 1 Fine 1 1 1 1 1 1 DC</span><br><span class="line">Repeat (with alternate endings)                             R&#123; 1 1 1 &#125; A&#123; 2 | 3 &#125;</span><br><span class="line">Short repeats (percent)                                     R4&#123; 1 2 &#125;</span><br><span class="line">Ties (like Lilypond’s, if you don’t want dashes)            1 ~ 1</span><br><span class="line">Slurs (like Lilypond’s)                                     1 ( 2 )</span><br><span class="line">Erhu fingering (applies to previous note)                   Fr=0 Fr=4</span><br><span class="line">Erhu symbol (applies to previous note)                      souyin harmonic up down bend tilde</span><br><span class="line">Tremolo                                                     1/// - 1///5 -</span><br><span class="line">Rehearsal letters                                           letterA letterB</span><br><span class="line">Multibar rest                                               R*8</span><br><span class="line">Dynamics (applies to previous note)                         \p \mp \f</span><br><span class="line">Other 1-word Lilypond \ commands                            \fermata \&gt; \! \( \) etc</span><br><span class="line">Text                                                        ^&quot;above note&quot; _&quot;below note&quot;</span><br><span class="line">Other Lilypond code                                         LP: (block of code) :LP (each delimeter at start of its line)</span><br><span class="line">Ignored                                                     % a comment</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>學點音樂</category>
      </categories>
      <tags>
        <tag>五線譜</tag>
        <tag>簡譜</tag>
        <tag>lilypond</tag>
      </tags>
  </entry>
  <entry>
    <title>我的生產力工具</title>
    <url>/sulfurandcu.io/clnyhr2mr003710rqgjtuhj11.html</url>
    <content><![CDATA[<center>一些提高工作效率的工具</center>

<span id="more"></span>

<h2 id="機械鍵盤"><a href="#機械鍵盤" class="headerlink" title="機械鍵盤"></a>機械鍵盤</h2><ul>
<li>使用 tmk, qmk 等工具燒錄自定義固件</li>
</ul>
<h2 id="鍵位佈局"><a href="#鍵位佈局" class="headerlink" title="鍵位佈局"></a>鍵位佈局</h2><ul>
<li><a href="clnor6mvz0015ocrq2jks39ew.html">dƷvorak</a></li>
</ul>
<h2 id="輸入法兒"><a href="#輸入法兒" class="headerlink" title="輸入法兒"></a>輸入法兒</h2><ul>
<li>昨夏雙拼</li>
<li>小鶴雙拼</li>
<li>朙月拼音</li>
<li>宮保拼音</li>
</ul>
<h2 id="輸入引擎"><a href="#輸入引擎" class="headerlink" title="輸入引擎"></a>輸入引擎</h2><ul>
<li>中州韻輸入法引擎（rime, weasel, squirrel）</li>
</ul>
<h2 id="顯示字體"><a href="#顯示字體" class="headerlink" title="顯示字體"></a>顯示字體</h2><ul>
<li>思源宋體</li>
<li>思源黑體</li>
<li>更紗黑體</li>
<li>等寬字體（iosevka）</li>
<li>可變字體（Amstelvar）</li>
</ul>
<h2 id="日程計劃"><a href="#日程計劃" class="headerlink" title="日程計劃"></a>日程計劃</h2><ul>
<li>microsoft.todo</li>
</ul>
<h2 id="系統優化"><a href="#系統優化" class="headerlink" title="系統優化"></a>系統優化</h2><ul>
<li>powertoys</li>
<li>ContextMenuManager</li>
<li>RightMenuMgr</li>
<li>WinXEditor</li>
<li>StartAllBack</li>
<li>W11ClassicMenu</li>
<li>Fliqlo</li>
<li>zadig</li>
<li>UsbDriverTool</li>
<li>SmartSystemMenu</li>
</ul>
<h2 id="科學上網"><a href="#科學上網" class="headerlink" title="科學上網"></a>科學上網</h2><ul>
<li>clash.for.windows (<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases">https://github.com/Fndroid/clash_for_windows_pkg/releases</a>)</li>
<li>xtls.space (<a href="https://xtlspace.20181024.xyz/#/register?code=bUox1yaB">https://xtlspace.20181024.xyz/#/register?code=bUox1yaB</a>)</li>
<li>tor.browser (<a href="https://www.torproject.org/download/">https://www.torproject.org/download/</a>)</li>
<li>tor.zlibrary (<a href="http://bookszlibb74ugqojhzhg2a63w5i2atv5bqarulgczawnbmsb6s6qead.onion/">http://bookszlibb74ugqojhzhg2a63w5i2atv5bqarulgczawnbmsb6s6qead.onion/</a>)</li>
</ul>
<h2 id="文件下載"><a href="#文件下載" class="headerlink" title="文件下載"></a>文件下載</h2><ul>
<li>Aria2</li>
<li>ndm</li>
<li>qbittorrent</li>
</ul>
<h2 id="文件共享"><a href="#文件共享" class="headerlink" title="文件共享"></a>文件共享</h2><ul>
<li>localsend</li>
</ul>
<h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2><ul>
<li>qdir</li>
<li>everything</li>
</ul>
<h2 id="虛擬環境"><a href="#虛擬環境" class="headerlink" title="虛擬環境"></a>虛擬環境</h2><ul>
<li>windows.terminal</li>
<li>wsl</li>
<li>vmware</li>
<li>docker</li>
<li>cygwin (posix.api&#x2F;cygwin1.dll, bin&#x3D;windows.pe)</li>
</ul>
<h2 id="遠程終端"><a href="#遠程終端" class="headerlink" title="遠程終端"></a>遠程終端</h2><ul>
<li>windterm</li>
</ul>
<h2 id="開發環境"><a href="#開發環境" class="headerlink" title="開發環境"></a>開發環境</h2><ul>
<li>mingw&#x2F;msys1 (shell) (posix.api&#x2F;msys-1.0.dll) (msys1~cmd.exe, mingw&#x2F;msys1~cygwin)</li>
<li>mingw&#x2F;msys2 (shell) (posix.api&#x2F;msys-2.0.dll) (msys2~cmd.exe, mingw&#x2F;msys2~cygwin)</li>
<li>cmake.for.windows</li>
<li>ninja.for.windows</li>
<li>mingw.for.windows   (win32.api, bin&#x3D;windows.pe) ~ (visual studio)</li>
<li>mingw32 (mingw-w64) (win32.api, bin&#x3D;windows.pe) ~ (visual studio)</li>
<li>mingw64 (mingw-w64) (win32.api, bin&#x3D;windows.pe) ~ (visual studio)</li>
<li>unxutils</li>
<li>llvm</li>
<li>python.sdk</li>
<li>java.sdk</li>
<li>go.sdk</li>
<li>node.js</li>
</ul>
<h2 id="版本管理"><a href="#版本管理" class="headerlink" title="版本管理"></a>版本管理</h2><ul>
<li>svn</li>
<li>git</li>
</ul>
<h2 id="文件對比"><a href="#文件對比" class="headerlink" title="文件對比"></a>文件對比</h2><ul>
<li>winmerge</li>
</ul>
<h2 id="文本編輯"><a href="#文本編輯" class="headerlink" title="文本編輯"></a>文本編輯</h2><ul>
<li>wxMEdit</li>
</ul>
<h2 id="軟件開發"><a href="#軟件開發" class="headerlink" title="軟件開發"></a>軟件開發</h2><ul>
<li>vscode</li>
<li>vs</li>
<li>eclipse</li>
<li>android.studio</li>
<li>x64dbg</li>
</ul>
<h2 id="軟件開發（嵌入式）"><a href="#軟件開發（嵌入式）" class="headerlink" title="軟件開發（嵌入式）"></a>軟件開發（嵌入式）</h2><ul>
<li>gcc-arm-none-eabi</li>
<li>openocd</li>
<li>jlink</li>
<li>jlink debugger</li>
<li>keil</li>
<li>embeetle</li>
<li>rt-thread.studio</li>
</ul>
<h2 id="硬件開發"><a href="#硬件開發" class="headerlink" title="硬件開發"></a>硬件開發</h2><ul>
<li>KiCAD</li>
<li>AD</li>
<li>CadenceSPB</li>
</ul>
<h2 id="機械工業"><a href="#機械工業" class="headerlink" title="機械工業"></a>機械工業</h2><ul>
<li>AutoCAD</li>
<li>FreeCAD</li>
<li>Revit</li>
<li>Rhino</li>
<li>3dsMax</li>
<li>SketchUp</li>
<li>Render.Vray</li>
<li>Render.D5</li>
<li>Render.Enscape</li>
</ul>
<h2 id="圖片文檔"><a href="#圖片文檔" class="headerlink" title="圖片文檔"></a>圖片文檔</h2><ul>
<li>截屏工具<ul>
<li>fscapture</li>
<li>sharex</li>
</ul>
</li>
<li>圖片查看<ul>
<li>honeyview</li>
</ul>
</li>
<li>圖片編輯<ul>
<li>GIMP</li>
<li>inkscape</li>
<li>shift.n</li>
<li>ascii.generator</li>
</ul>
</li>
<li>文檔查看<ul>
<li>PDF.24</li>
</ul>
</li>
<li>文檔編輯<ul>
<li>PDF.XChange.Editor</li>
<li>draw.io</li>
<li>wave.drom.editor</li>
</ul>
</li>
</ul>
<h2 id="視頻音頻"><a href="#視頻音頻" class="headerlink" title="視頻音頻"></a>視頻音頻</h2><ul>
<li>錄屏工具<ul>
<li>obs.studio</li>
<li>lonelyscreen (ios screen display)</li>
</ul>
</li>
<li>視頻播放<ul>
<li>MPC-HC</li>
<li>VLC</li>
<li>PotPlayer</li>
</ul>
</li>
<li>視頻剪輯<ul>
<li>shotcut</li>
<li>losslesscut</li>
</ul>
</li>
<li>視頻轉碼<ul>
<li>handbrake</li>
</ul>
</li>
<li>音頻播放<ul>
<li>foobar2000</li>
</ul>
</li>
<li>音頻剪輯<ul>
<li>audacity</li>
<li>wavosaur</li>
</ul>
</li>
<li>音頻轉碼<ul>
<li>略.</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>效率提升</category>
      </categories>
      <tags>
        <tag>生產工具</tag>
      </tags>
  </entry>
  <entry>
    <title>囗－囗</title>
    <url>/sulfurandcu.io/clnyhr2mt003b10rq5snfeg6t.html</url>
    <content><![CDATA[<center>囗囗囗囗囗囗囗　囗囗囗囗囗囗囗</center>
<center>囗囗囗囗囗囗囗　囗囗囗囗囗囗囗</center>
<center>囗囗囗囗囗囗囗　囗囗囗囗囗囗囗</center>
<center>囗囗囗囗囗囗囗　囗囗囗囗囗囗囗</center>
<center><br></center>
<center>囗囗囗囗囗囗囗　囗囗囗囗囗囗囗</center>
<center>囗囗囗囗囗囗囗　囗囗囗囗囗囗囗</center>
<center>囗囗囗囗囗囗囗　囗囗囗囗囗囗囗</center>
<center>囗囗囗囗囗囗囗　囗囗囗囗囗囗囗</center>

<br>

<span id="more"></span>

<br>
]]></content>
  </entry>
  <entry>
    <title>嵌入式 IAP 升級功能（#00）目錄索引</title>
    <url>/sulfurandcu.io/clnyhr2n2004t10rq7rdi2ftx.html</url>
    <content><![CDATA[<p>嵌入式 IAP 升級功能（#01）基礎概念<br>嵌入式 IAP 升級功能（#02）升級方案<!-- （方案選型、空間分配） --><br>嵌入式 IAP 升級功能（#03）流程設計<!-- （針對其中一種方案詳細闡述 bootloader 的具體流程與 app 的具體流程） --><br>嵌入式 IAP 升級功能（#04）技術細節<!-- （在線升級功能會用到的技術：分散加載、重定向中斷向量表） --><br>嵌入式 IAP 升級功能（#05）增量升級<br>嵌入式 IAP 升級功能（#06）引導程序 bootloader 升級</p>
<span id="more"></span>

<h2 id="參考鏈接"><a href="#參考鏈接" class="headerlink" title="參考鏈接"></a>參考鏈接</h2><p><a href="https://itexp.blog.csdn.net/article/details/83793309">https://itexp.blog.csdn.net/article/details/83793309</a></p>
<p><a href="https://blog.csdn.net/qq_24130227/article/details/123752964">https://blog.csdn.net/qq_24130227/article/details/123752964</a><br><a href="https://blog.csdn.net/qq_24130227/article/details/108379324">https://blog.csdn.net/qq_24130227/article/details/108379324</a><br><a href="https://blog.csdn.net/qq_24130227/article/details/113003329">https://blog.csdn.net/qq_24130227/article/details/113003329</a><br><a href="https://blog.csdn.net/qq_24130227/article/details/120061873">https://blog.csdn.net/qq_24130227/article/details/120061873</a><br><a href="https://blog.csdn.net/qq_24130227/article/details/108427842">https://blog.csdn.net/qq_24130227/article/details/108427842</a></p>
]]></content>
      <categories>
        <category>開發筆記</category>
      </categories>
      <tags>
        <tag>嵌入式軟件開發</tag>
        <tag>單片機</tag>
        <tag>iap</tag>
        <tag>bootloader</tag>
      </tags>
  </entry>
  <entry>
    <title>嵌入式 IAP 升級功能（#01）基礎概念</title>
    <url>/sulfurandcu.io/clnyhr2n2004x10rq71zl3lqj.html</url>
    <content><![CDATA[<center>傳統編程方式</center>

<pre class="mermaid">
flowchart LR
%%{init: { &quot;flowchart&quot;: { &quot;curve&quot;: &quot;basis&quot; } } }%%
A(先取下芯片)---&gt;B(再燒錄程序)---&gt;C(後裝回板卡)
</pre>

<center>現代編程方式</center>

<pre class="mermaid">
flowchart LR
%%{init: { &quot;flowchart&quot;: { &quot;curve&quot;: &quot;basis&quot; } } }%%
A(&quot;在電路編程&lt;br&gt;(ＩＣＰ)&quot;)---&gt;B(&quot;在系統編程&lt;br&gt;(ＩＳＰ)&quot;)---&gt;C(&quot;在應用編程&lt;br&gt;(ＩＡＰ)&quot;)
</pre>

<span id="more"></span>

<h2 id="傳統編程方式"><a href="#傳統編程方式" class="headerlink" title="傳統編程方式"></a>傳統編程方式</h2><p>傳統編程方式是先將程序燒錄至主控芯片中再焊接到電路板上。</p>
<p><strong>開發階段</strong></p>
<ul>
<li>➀ 從電路板上取下芯片</li>
<li>➁ 使用燒錄器燒寫程序</li>
<li>➂ 將芯片裝回至電路板</li>
</ul>
<p><strong>量產階段</strong></p>
<ul>
<li>➀ 從 tray 盤取出芯片</li>
<li>➁ 使用燒錄器燒寫程序</li>
<li>➂ 將芯片放回 tray 盤</li>
</ul>
<p><strong>維護階段</strong></p>
<ul>
<li>➀ 從電路板上拆下芯片</li>
<li>➁ 使用燒錄器燒寫程序</li>
<li>➂ 將芯片焊回至電路板</li>
</ul>
<h2 id="現代編程方式"><a href="#現代編程方式" class="headerlink" title="現代編程方式"></a>現代編程方式</h2><p>現代編程方式可以直接進行板上燒錄，不用再取下芯片放到專用的燒錄器上燒錄，極大地提高了開發、生產以及維護效率。</p>
<p>現代編程方式又可分爲：</p>
<ul>
<li>在電路編程 ICP (Circuit)</li>
<li>在系統編程 ISP (System)</li>
<li>在應用編程 IAP (Application)</li>
</ul>
<table>
<thead>
<tr>
<th align="center">編程方式</th>
<th align="center">在電路編程</th>
<th align="center">在系統編程</th>
<th align="center">在應用編程</th>
</tr>
</thead>
<tbody><tr>
<td align="center">核心思想</td>
<td align="center">藉助外部燒錄器<br>通過JTAG&#x2F;SWD接口<br>實現在電路編程</td>
<td align="center">藉助芯片內部<br>固化的引導程序和BOOT引腳<br>以及片上接口<br>實現在系統編程</td>
<td align="center">藉助用戶自己<br>編寫的引導程序、應用程序<br>以及片上接口、板上接口<br>實現在應用編程</td>
</tr>
<tr>
<td align="center">引導程序</td>
<td align="center">不需要</td>
<td align="center">需要芯片廠家編寫<br>並固化到某一地址空間</td>
<td align="center">需要用戶自己編寫<br>並燒錄至內部flash存儲器</td>
</tr>
<tr>
<td align="center">進入方式</td>
<td align="center">隨時待命</td>
<td align="center">需要更改BOOT引腳的電平<br>然後硬件復位<br>進入內部固化的引導程序</td>
<td align="center">隨時待命</td>
</tr>
<tr>
<td align="center">配套軟件</td>
<td align="center">燒錄軟件</td>
<td align="center">芯片廠家提供的<br>上位機ISP編程軟件</td>
<td align="center">用戶自己開發的數據傳輸軟件</td>
</tr>
<tr>
<td align="center">通信接口</td>
<td align="center">JTAG&#x2F;SWD</td>
<td align="center">取決於芯片中固化的引導程序<br>URT&#x2F;SPI&#x2F;IIC&#x2F;CAN&#x2F;USB</td>
<td align="center">理論上可以支持任意接口<br>URT&#x2F;SPI&#x2F;IIC<br>485&#x2F;CAN&#x2F;USB<br>WiFi&#x2F;BLE&#x2F;IrDA<br>PLC&#x2F;ETH&#x2F;4G&#x2F;5G&#x2F;NBIoT</td>
</tr>
<tr>
<td align="center">程序升級<br>是否需要<br>拆裝芯片</td>
<td align="center">不需要<br>拆裝芯片</td>
<td align="center">不需要<br>拆裝芯片</td>
<td align="center">不需要<br>拆裝芯片</td>
</tr>
<tr>
<td align="center">程序升級<br>是否需要<br>拆裝外殼</td>
<td align="center">需要<br>拆開設備外殼</td>
<td align="center">通信接口完備的情況下<br>不需要<br>拆開設備外殼<br>485&#x2F;CAN&#x2F;USB</td>
<td align="center">通信接口完備的情況下<br>不需要<br>拆開設備外殼<br>485&#x2F;CAN&#x2F;USB&#x2F;WiFi&#x2F;BLE&#x2F;IrDA</td>
</tr>
<tr>
<td align="center">程序升級<br>是否需要<br>前往現場</td>
<td align="center">需要<br>前往設備安裝現場</td>
<td align="center">需要<br>前往設備安裝現場</td>
<td align="center">遠程通信功能完備的情況下<br>不需要<br>前往設備安裝現場<br>PLC&#x2F;ETH&#x2F;4G&#x2F;5G&#x2F;NBIoT</td>
</tr>
</tbody></table>
<div class="note info no-icon"><p>ICP 主要是在開發階段使用，其燒錄速度是 ISP 和 IAP 所無法比擬的。</p>
</div>

<div class="note info no-icon"><p>IAP 與 ISP 類似，都有 bootloader 引導程序，因此無需使用燒錄器。二者的區別在於，ISP 的引導程序由芯片廠家編寫，比較簡單，無法實現用戶的定製化需求；而 IAP 的引導程序是由用戶自己實現，可以根據需求自行修改。另外 ISP 進入 boot 程序的方式是通過更改 BOOT 引腳的電平；而 IAP 則是從用戶程序中通過軟件復位或者跳轉的方式直接進入 bootloader 程序，因此相較於 ISP 來說會更加靈活。</p>
</div>

<div class="note info no-icon"><p>通過 WiFi&#x2F;BLE&#x2F;4G&#x2F;5G&#x2F;NBIoT 等無線通信技術實現 IAP 功能的方案也被稱作 OTA 空中下載技術。</p>
</div>

<table>
<thead>
<tr>
<th align="center">BOOT1</th>
<th align="center">BOOT0</th>
<th align="center">BOOT MODE</th>
</tr>
</thead>
<tbody><tr>
<td align="center">X</td>
<td align="center">0</td>
<td align="center">boot from 0x08000000 : main memory</td>
</tr>
<tr>
<td align="center">0</td>
<td align="center">1</td>
<td align="center">boot from 0x1FFF0000 : boot memory</td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">boot from 0x20000000 : sram memory</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>開發筆記</category>
      </categories>
      <tags>
        <tag>嵌入式軟件開發</tag>
        <tag>在線升級</tag>
      </tags>
  </entry>
  <entry>
    <title>嵌入式 IAP 升級功能（#02）升級方案</title>
    <url>/sulfurandcu.io/clnyhr2n3004y10rq322c66uu.html</url>
    <content><![CDATA[<center>引導程序主導｜應用程序主導</center>
<center>which one is better?</center>
<br>

<p><img src="/sulfurandcu.io/images/cover.png" alt="圖片加載失敗"></p>
<span id="more"></span>

<h2 id="思路（-1）：引導程序主導"><a href="#思路（-1）：引導程序主導" class="headerlink" title="思路（#1）：引導程序主導"></a>思路（#1）：引導程序主導</h2><table>
<thead>
<tr>
<th align="center">具體分工</th>
<th align="center">引導程序</th>
<th align="center">應用程序</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">編程操作</td>
<td align="center">✔</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">通信協議</td>
<td align="center">完備的通信協議棧</td>
<td align="center">　　　　　　　　</td>
</tr>
<tr>
<td align="center">文件解壓</td>
<td align="center">✔</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">差分還原</td>
<td align="center">✔</td>
<td align="center"></td>
</tr>
</tbody>
</table>

<div class="note success no-icon"><p><strong>優點</strong>：設備中沒有應用程序或應用程序異常時也可以進行 IAP 升級。</p>
</div>

<div class="note danger no-icon"><p><strong>缺點</strong>：在引導程序中集成通信協議棧、文件解壓、差分還原等功能，會導致其代碼量較大。</p>
</div>

<h2 id="思路（-2）：應用程序主導"><a href="#思路（-2）：應用程序主導" class="headerlink" title="思路（#2）：應用程序主導"></a>思路（#2）：應用程序主導</h2><table>
<thead>
<tr>
<th align="center">具體分工</th>
<th align="center">引導程序</th>
<th align="center">應用程序</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">編程操作</td>
<td align="center">✔</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">通信協議</td>
<td align="center">　　　　　　　　</td>
<td align="center">完備的通信協議棧</td>
</tr>
<tr>
<td align="center">文件解壓</td>
<td align="center"></td>
<td align="center">✔</td>
</tr>
<tr>
<td align="center">差分還原</td>
<td align="center"></td>
<td align="center">✔</td>
</tr>
</tbody>
</table>

<div class="note success no-icon"><p><strong>優點</strong>：引導程序比較簡單，佔用空間小，方便維護。</p>
</div>

<div class="note danger no-icon"><p><strong>缺點</strong>：設備中沒有應用程序或應用程序異常時無法進行 IAP 升級。</p>
</div>

<h2 id="思路（-3）：兩者各取所長"><a href="#思路（-3）：兩者各取所長" class="headerlink" title="思路（#3）：兩者各取所長"></a>思路（#3）：兩者各取所長</h2><table>
<thead>
<tr>
<th align="center">具體分工</th>
<th align="center">引導程序</th>
<th align="center">應用程序</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">編程操作</td>
<td align="center">✔</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">通信協議</td>
<td align="center">基礎的通信協議棧</td>
<td align="center">完備的通信協議棧</td>
</tr>
<tr>
<td align="center">文件解壓</td>
<td align="center"></td>
<td align="center">✔</td>
</tr>
<tr>
<td align="center">差分還原</td>
<td align="center"></td>
<td align="center">✔</td>
</tr>
</tbody>
</table>

<div class="note success no-icon"><p><strong>特點</strong>：在引導程序中集成基礎的通信協議棧，代碼量能接受，應用程序異常時也能在線升級。</p>
</div>

<div class="note success no-icon"><p><strong>特點</strong>：在應用程序中集成完整的通信協議棧、文件解壓、差分還原等功能，功能完備。</p>
</div>

<h2 id="方案（-0）"><a href="#方案（-0）" class="headerlink" title="方案（#0）"></a>方案（#0）</h2><table>
<thead>
<tr>
<th align="center">內部flash存儲空間劃分</th>
<th align="center">內部flash存儲空間細分</th>
</tr>
</thead>
<tbody>
<!--  -->
<tr>
    <td align="center" rowspan="2">引導程序存儲區<br>bootloader</td>
    <td align="center">中斷向量表</td>
</tr>
<tr>
    <td align="center">引導程序</td>
</tr>
<!--  -->
<tr>
    <td align="center" rowspan="2">應用程序存儲區</td>
    <td align="center">重定向的中斷向量表</td>
</tr>
<tr>
    <td align="center">應用程序</td>
</tr>
<!--  -->
<tr>
    <td align="center">參數數據存儲區</td>
    <td align="center">掉電不丟失的系統參數</td>
</tr>
</tbody>
</table>

<p>設備收到升級指令後，重啓進入或跳轉進入引導程序。進入引導程序後首先擦除應用程序存儲區，然後等待接收新版應用程序（直接寫入到升級文件存儲區），等接收完畢且校驗無誤後跳轉至應用程序，至此升級完成。</p>
<h2 id="方案（-1）"><a href="#方案（-1）" class="headerlink" title="方案（#1）"></a>方案（#1）</h2><table>
<thead>
<tr>
<th align="center">內部flash存儲空間劃分</th>
<th align="center">內部flash存儲空間細分</th>
</tr>
</thead>
<tbody>
<!--  -->
<tr>
    <td align="center" rowspan="2">引導程序存儲區<br>bootloader</td>
    <td align="center">中斷向量表</td>
</tr>
<tr>
    <td align="center">引導程序</td>
</tr>
<!--  -->
<tr>
    <td align="center" rowspan="2">應用程序存儲區</td>
    <td align="center">重定向的中斷向量表</td>
</tr>
<tr>
    <td align="center">應用程序</td>
</tr>
<!--  -->
<tr>
    <td align="center" rowspan="2">升級數據存儲區</td>
    <td align="center">解壓後的新版程序</td>
</tr>
<tr>
    <td align="center">接收到的壓縮文件</td>
</tr>
<!--  -->
<tr>
    <td align="center">參數數據存儲區</td>
    <td align="center">掉電不丟失的系統參數</td>
</tr>
</tbody>
</table>

<p>或</p>
<table>
<thead>
<tr>
<th align="center">內部flash存儲空間劃分</th>
<th align="center">內部flash存儲空間細分</th>
</tr>
</thead>
<tbody>
<!--  -->
<tr>
    <td align="center" rowspan="2">引導程序存儲區<br>bootloader</td>
    <td align="center">中斷向量表</td>
</tr>
<tr>
    <td align="center">引導程序</td>
</tr>
<!--  -->
<tr>
    <td align="center" rowspan="2">應用程序存儲區</td>
    <td align="center">重定向的中斷向量表</td>
</tr>
<tr>
    <td align="center">應用程序</td>
</tr>
<!--  -->
<tr>
    <td align="center">參數數據存儲區</td>
    <td align="center">掉電不丟失的系統參數</td>
</tr>
</tbody>
<thead>
<tr>
<th align="center">外部flash存儲空間劃分</th>
<th align="center">外部flash存儲空間細分</th>
</tr>
</thead>
<tbody>
<!--  -->
<tr>
    <td align="center" rowspan="2">升級數據存儲區</td>
    <td align="center">解壓後的新版程序</td>
</tr>
<tr>
    <td align="center">接收到的壓縮文件</td>
</tr>
</tbody>
</table>

<h3 id="思路（-1）"><a href="#思路（-1）" class="headerlink" title="思路（#1）"></a>思路（#1）</h3><p>設備收到升級指令後，重啓進入或跳轉進入引導程序。進入引導程序後首先擦除升級文件存儲區，然後等待接收新版應用程序（暫時存放至升級文件存儲區），等接收完畢且校驗無誤後，擦除舊版應用程序，然後將升級文件存儲區中的新版應用程序拷貝&#x2F;解壓&#x2F;差分還原至應用程序存儲區，最後跳轉至應用程序，至此升級完成。</p>
<h3 id="思路（-2）"><a href="#思路（-2）" class="headerlink" title="思路（#2）"></a>思路（#2）</h3><p>設備收到升級指令後，首先擦除升級文件存儲區，然後等待接收新版應用程序（暫時存放至升級文件存儲區），等接收完畢且校驗無誤後，將升級文件存儲區中的新版應用程序拷貝&#x2F;解壓&#x2F;差分還原至新版程序存儲區，重啓進入或跳轉進入引導程序。進入引導程序後對新版程序進行二次校驗，校驗通過後擦除舊版應用程序，然後將新版程序存儲區中的新版應用程序拷貝至應用程序存儲區，最後跳轉至應用程序，至此升級完成。</p>
<h3 id="思路（-3）"><a href="#思路（-3）" class="headerlink" title="思路（#3）"></a>思路（#3）</h3><p>設備收到升級指令後，首先擦除升級文件存儲區，然後等待接收新版應用程序（暫時存放至升級文件存儲區），等接收完畢且校驗無誤後，將升級文件存儲區中的新版應用程序拷貝&#x2F;解壓&#x2F;差分還原至新版程序存儲區，重啓進入或跳轉進入引導程序。進入引導程序後對新版程序進行二次校驗，校驗通過後擦除舊版應用程序，然後將新版程序存儲區中的新版應用程序拷貝至應用程序存儲區，最後跳轉至應用程序，至此升級完成。</p>
<p>抹除應用程序有效標識後，重啓進入或跳轉進入引導程序。進入引導程序後等待通信，若收到升級指令，首先擦除升級文件存儲區，然後等待接收新版應用程序（暫時存放至升級文件存儲區），等接收完畢且校驗無誤後，擦除舊版應用程序，然後將升級文件存儲區中的新版應用程序拷貝（不支持解壓和差分還原）至應用程序存儲區，最後跳轉至應用程序，至此升級完成。</p>
<h2 id="方案（-2）"><a href="#方案（-2）" class="headerlink" title="方案（#2）"></a>方案（#2）</h2><table>
<thead>
<tr>
<th align="center">內部flash存儲空間劃分</th>
<th align="center">內部flash存儲空間細分</th>
</tr>
</thead>
<tbody>
<!--  -->
<tr>
    <td align="center" rowspan="2">引導程序存儲區<br>bootloader</td>
    <td align="center">中斷向量表</td>
</tr>
<tr>
    <td align="center">引導程序</td>
</tr>
<!--  -->
<tr>
    <td align="center" rowspan="2">應用程序存儲區<br>（1）</td>
    <td align="center">重定向的中斷向量表</td>
</tr>
<tr>
    <td align="center">應用程序</td>
</tr>
<!--  -->
<tr>
    <td align="center" rowspan="2">應用程序存儲區<br>（2）</td>
    <td align="center">重定向的中斷向量表</td>
</tr>
<tr>
    <td align="center">應用程序</td>
</tr>
<!--  -->
<tr>
    <td align="center">參數數據存儲區</td>
    <td align="center">掉電不丟失的系統參數</td>
</tr>
</tbody>
</table>

<h3 id="思路（-1）-1"><a href="#思路（-1）-1" class="headerlink" title="思路（#1）"></a>思路（#1）</h3><p>設備收到升級指令後，重啓進入或跳轉進入引導程序。進入引導程序後首先擦除備份應用存儲區，然後等待接收新版應用程序（直接寫入到備份應用存儲區），等接收完畢且校驗無誤後，翻轉APP1與APP2的有效標識，並根據標識跳轉至正確的應用程序，至此升級完成。</p>
<h3 id="思路（-2）-1"><a href="#思路（-2）-1" class="headerlink" title="思路（#2）"></a>思路（#2）</h3><p>設備收到升級指令後，首先擦除備份應用存儲區，然後等待接收新版應用程序（直接寫入到備份應用存儲區），等接收完畢且校驗無誤後，翻轉APP1與APP2的有效標識，重啓進入或跳轉進入引導程序，在引導程序中根據標識跳轉至正確的應用程序，至此升級完成。</p>
<h3 id="思路（-3）-1"><a href="#思路（-3）-1" class="headerlink" title="思路（#3）"></a>思路（#3）</h3><p>設備收到升級指令後，首先擦除備份應用存儲區，然後等待接收新版應用程序（直接寫入到備份應用存儲區），等接收完畢且校驗無誤後，翻轉APP1與APP2的有效標識，重啓進入或跳轉進入引導程序，在引導程序中根據標識跳轉至正確的應用程序，至此升級完成。</p>
<p>抹除應用程序有效標識後，重啓進入或跳轉進入引導程序。進入引導程序後等待通信，若收到升級指令，首先擦除備份應用存儲區，然後等待接收新版應用程序（直接寫入到備份應用存儲區），等接收完畢且校驗無誤後，翻轉APP1與APP2的有效標識，並根據標識跳轉至正確的應用程序，至此升級完成。</p>
<h2 id="方案（-3）"><a href="#方案（-3）" class="headerlink" title="方案（#3）"></a>方案（#3）</h2><table>
<thead>
<tr>
<th align="center">內部flash存儲空間劃分</th>
<th align="center">內部flash存儲空間細分</th>
</tr>
</thead>
<tbody>
<!--  -->
<tr>
    <td align="center" rowspan="2">引導程序存儲區<br>bootloader</td>
    <td align="center">中斷向量表</td>
</tr>
<tr>
    <td align="center">引導程序</td>
</tr>
<!--  -->
<tr>
    <td align="center" rowspan="2">應用程序存儲區<br>（1）</td>
    <td align="center">重定向的中斷向量表</td>
</tr>
<tr>
    <td align="center">應用程序</td>
</tr>
<!--  -->
<tr>
    <td align="center" rowspan="2">應用程序存儲區<br>（2）</td>
    <td align="center">重定向的中斷向量表</td>
</tr>
<tr>
    <td align="center">應用程序</td>
</tr>
<!--  -->
<tr>
    <td align="center" rowspan="2">升級數據存儲區</td>
    <td align="center">解壓後的新版程序</td>
</tr>
<tr>
    <td align="center">接收到的壓縮文件</td>
</tr>
<!--  -->
<tr>
    <td align="center">參數數據存儲區</td>
    <td align="center">掉電不丟失的系統參數</td>
</tr>
</tbody>
</table>

<p>或</p>
<table>
<thead>
<tr>
<th align="center">內部flash存儲空間劃分</th>
<th align="center">內部flash存儲空間細分</th>
</tr>
</thead>
<tbody>
<!--  -->
<tr>
    <td align="center" rowspan="2">引導程序存儲區<br>bootloader</td>
    <td align="center">中斷向量表</td>
</tr>
<tr>
    <td align="center">引導程序</td>
</tr>
<!--  -->
<tr>
    <td align="center" rowspan="2">應用程序存儲區<br>（1）</td>
    <td align="center">重定向的中斷向量表</td>
</tr>
<tr>
    <td align="center">應用程序</td>
</tr>
<!--  -->
<tr>
    <td align="center" rowspan="2">應用程序存儲區<br>（2）</td>
    <td align="center">重定向的中斷向量表</td>
</tr>
<tr>
    <td align="center">應用程序</td>
</tr>
<!--  -->
<tr>
    <td align="center">參數數據存儲區</td>
    <td align="center">掉電不丟失的系統參數</td>
</tr>
</tbody>
<thead>
<tr>
<th align="center">外部flash存儲空間劃分</th>
<th align="center">外部flash存儲空間細分</th>
</tr>
</thead>
<tbody>
<!--  -->
<tr>
    <td align="center" rowspan="2">升級數據存儲區</td>
    <td align="center">解壓後的新版程序</td>
</tr>
<tr>
    <td align="center">接收到的壓縮文件</td>
</tr>
</tbody>
</table>

<h3 id="思路（-1）-2"><a href="#思路（-1）-2" class="headerlink" title="思路（#1）"></a>思路（#1）</h3><p>設備收到升級指令後，重啓進入或跳轉進入引導程序。進入引導程序後首先擦除升級文件存儲區，然後等待接收新版應用程序（暫時存放至升級文件存儲區），等接收完畢且校驗無誤後，擦除備份應用存儲區，然後將升級文件存儲區中的新版應用程序拷貝&#x2F;解壓&#x2F;差分還原至備份應用存儲區，最後翻轉APP1與APP2的有效標識，並根據標識跳轉至正確的應用程序，至此升級完成。</p>
<h3 id="思路（-2）-2"><a href="#思路（-2）-2" class="headerlink" title="思路（#2）"></a>思路（#2）</h3><p>設備收到升級指令後，首先擦除升級文件存儲區，然後等待接收新版應用程序（暫時存放至升級文件存儲區），等接收完畢且校驗無誤後，擦除備份應用存儲區，然後將升級文件存儲區中的新版應用程序拷貝&#x2F;解壓&#x2F;差分還原至備份應用存儲區，翻轉APP1與APP2的有效標識，重啓進入或跳轉進入引導程序，在引導程序中根據標識跳轉至正確的應用程序，至此升級完成。</p>
<h3 id="思路（-3）-2"><a href="#思路（-3）-2" class="headerlink" title="思路（#3）"></a>思路（#3）</h3><p>設備收到升級指令後，首先擦除升級文件存儲區，然後等待接收新版應用程序（暫時存放至升級文件存儲區），等接收完畢且校驗無誤後，擦除備份應用存儲區，然後將升級文件存儲區中的新版應用程序拷貝&#x2F;解壓&#x2F;差分還原至備份應用存儲區，翻轉APP1與APP2的有效標識，重啓進入或跳轉進入引導程序，在引導程序中根據標識跳轉至正確的應用程序，至此升級完成。</p>
<p>抹除應用程序有效標識後，重啓進入或跳轉進入引導程序。進入引導程序後等待通信，若收到升級指令，首先擦除升級文件存儲區，然後等待接收新版應用程序（暫時存放至升級文件存儲區），等接收完畢且校驗無誤後，擦除備份應用存儲區，然後將升級文件存儲區中的新版應用程序拷貝（不支持解壓和差分還原）至備份應用存儲區，最後翻轉APP1與APP2的有效標識，並根據標識跳轉至正確的應用程序，至此升級完成。</p>
]]></content>
      <categories>
        <category>開發筆記</category>
      </categories>
      <tags>
        <tag>嵌入式軟件開發</tag>
        <tag>在線升級</tag>
      </tags>
  </entry>
  <entry>
    <title>嵌入式 IAP 升級功能（#03）流程設計</title>
    <url>/sulfurandcu.io/clnyhr2n3005010rqf3gcgp39.html</url>
    <content><![CDATA[<center>引導程序流程設計｜應用程序流程設計</center>
<br>

<p><img src="/sulfurandcu.io/images/cover.png" alt="圖片加載失敗"></p>
<span id="more"></span>

<h2 id="引導程序流程"><a href="#引導程序流程" class="headerlink" title="引導程序流程"></a>引導程序流程</h2><p>引導程序的設計方案我知道有兩種：</p>
<ul>
<li>立即跳轉方案</li>
<li>延時跳轉方案</li>
</ul>
<p>立即跳轉方案在判斷出應用程序有效之後會立即執行跳轉操作，該方案適用於對啓動時間要求比較高的產品。延時跳轉方案則是先在引導程序中等待一段時間，在這段時間內如果沒有任何請求則時間到了之後會自動跳轉至應用程序，否則將停留在引導程序中。</p>
<h3 id="立即跳轉方案"><a href="#立即跳轉方案" class="headerlink" title="立即跳轉方案"></a>立即跳轉方案</h3><pre class="mermaid">
flowchart TB
%%{init: { &quot;flowchart&quot;: { &quot;curve&quot;: &quot;basis&quot; } } }%%
PowerReset(設備上電覆位)--&gt;IapStart(引導程序開始)--&gt;IapCheckApp[檢查應用程序有效標識]--&gt;IapIsAppValid{是否有效}
IapIsAppValid--是--&gt;IapJumpToApp[跳轉進入應用程序]--&gt;IapOver(引導程序結束)
IapIsAppValid--否--&gt;IapRemap[重定向中斷向量表]--&gt;IapInit[配置相關外設]--&gt;IapIsHaveUpdateData{是否存在&lt;br&gt;升級數據}
IapIsHaveUpdateData--否--&gt;IapBeforeJump
IapIsHaveUpdateData--是--&gt;IapDoUpdate[執行升級操作]---&gt;IapEraseUpdateData[擦除升級數據]--&gt;IapIsUpdateSucc{升級成功}
IapIsUpdateSucc--是---&gt;IapSetAppValid[修改應用程序有效標識：有效]--&gt;IapBeforeJump[關閉外設和中斷]--&gt;IapJumpToApp
IapIsUpdateSucc--否--&gt;IapIsAppErased{應用程序已損毀}
IapIsAppErased--否--&gt;IapBeforeJump
IapIsAppErased--是&lt;br&gt;留在引導程序中--&gt;IapComm[執行通信任務]--&gt;IapIsRecvDone{收到升級數據}
IapIsRecvDone--否--&gt;IapComm
IapIsRecvDone--是--&gt;IapDoUpdate
</pre>

<h3 id="延時跳轉方案"><a href="#延時跳轉方案" class="headerlink" title="延時跳轉方案"></a>延時跳轉方案</h3><pre class="mermaid">
flowchart TB
%%{init: { &quot;flowchart&quot;: { &quot;curve&quot;: &quot;basis&quot; } } }%%
PowerReset(設備上電覆位)--&gt;IapStart(引導程序開始)--&gt;IapCheckApp[檢查應用程序有效標識]--&gt;IapIsAppValid{是否有效}
IapIsAppValid--是--&gt;IapWait{計數超時&lt;br&gt;（延時跳轉）}
IapWait--否--&gt;IapWait
IapWait--是----------&gt;IapJumpToApp[跳轉進入應用程序]--&gt;IapOver(引導程序結束)
IapIsAppValid--否--&gt;IapRemap[重定向中斷向量表]--&gt;IapInit[配置相關外設]--&gt;IapIsHaveUpdateData{是否存在&lt;br&gt;升級數據}
IapIsHaveUpdateData--否--&gt;IapBeforeJump
IapIsHaveUpdateData--是--&gt;IapDoUpdate[執行升級操作]---&gt;IapEraseUpdateData[擦除升級數據]--&gt;IapIsUpdateSucc{升級成功}
IapIsUpdateSucc--是---&gt;IapSetAppValid[修改應用程序有效標識：有效]--&gt;IapBeforeJump[關閉外設和中斷]--&gt;IapJumpToApp
IapIsUpdateSucc--否--&gt;IapIsAppErased{應用程序已損毀}
IapIsAppErased--否--&gt;IapBeforeJump
IapIsAppErased--是&lt;br&gt;留在引導程序中--&gt;IapComm[執行通信任務]--&gt;IapIsRecvDone{收到升級數據}
IapIsRecvDone--否--&gt;IapComm
IapIsRecvDone--是--&gt;IapDoUpdate
</pre>

<h2 id="應用程序流程"><a href="#應用程序流程" class="headerlink" title="應用程序流程"></a>應用程序流程</h2><pre class="mermaid">
flowchart TB
%%{init: { &quot;flowchart&quot;: { &quot;curve&quot;: &quot;basis&quot; } } }%%
AppStart(應用程序開始)--&gt;AppRemap[重定向中斷向量表]--&gt;AppInit[配置相關外設]--&gt;AppTask[執行應用功能]--&gt;AppComm[執行通信任務]--&gt;AppIsRecvDone{收到升級數據}
AppIsRecvDone--否--&gt;AppTask
AppIsRecvDone--是--&gt;AppSetAppInvalid[修改應用程序有效標識：無效]--&gt;AppBeforeJump[關閉外設和中斷]--&gt;AppJumpToIap[重啓進入引導程序｜跳轉進入引導程序]--&gt;AppOver(應用程序結束)
</pre>
]]></content>
      <categories>
        <category>開發筆記</category>
      </categories>
      <tags>
        <tag>嵌入式軟件開發</tag>
        <tag>在線升級</tag>
      </tags>
  </entry>
  <entry>
    <title>嵌入式 IAP 升級功能（#04）技術細節</title>
    <url>/sulfurandcu.io/clnyhr2n4005410rqfyjmedv1.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>開發筆記</category>
      </categories>
      <tags>
        <tag>嵌入式軟件開發</tag>
        <tag>在線升級</tag>
      </tags>
  </entry>
  <entry>
    <title>嵌入式 IAP 升級功能（#05）增量升級</title>
    <url>/sulfurandcu.io/clnyhr2n4005710rqfv00ckub.html</url>
    <content><![CDATA[<p>全量升級由於要傳輸新版程序的完整鏡像，因此升級時間通常較長，升級失敗的概率也更大。那麼能不能只傳送差異數據呢？答案是可以。這種技術被稱作增量升級&#x2F;差量升級&#x2F;差分升級。</p>
<p>常見的方案有：</p>
<ul>
<li>bsdiff&#x2F;bspatch + quicklz</li>
<li>hdifflite&#x2F;hpatchlite + tinyuz</li>
</ul>
<div class="note info no-icon"><p>不過 bsdiff + quicklz 方案的內存開銷太大，現已不建議使用。</p>
</div>

<span id="more"></span>

<h2 id="全量升級-amp-增量升級"><a href="#全量升級-amp-增量升級" class="headerlink" title="全量升級 &amp; 增量升級"></a>全量升級 &amp; 增量升級</h2><p>增量升級確實降低了傳輸過程中的數據量，但也帶來了版本管理複雜的問題，所以說不能因爲有了增量升級，全量升級就不用了。</p>
<p>以往我們做全量升級的時候沒有引入壓縮技術，在移植 hdiff&#x2F;hpatchlite 的時候我發現，hdiff 生成的差異文件不比原文件小多少，但是其可壓縮性非常高，這樣就得把解壓算法也移植進來。既然解壓算法都已經有了，不把增量升級也壓縮一下，那豈不是很浪費？</p>
<table>
<tbody>
<!--  -->
<tr>
    <td align="center" rowspan="2">全量升級</td>
    <td align="center">未經壓縮的新版程序</td>
    <td align="center">（✘）</td>
</tr>
<tr>
    <td align="center">經過壓縮的新版程序</td>
    <td align="center">（✔）</td>
</tr>
<!--  -->
<tr>
    <td align="center" rowspan="2">增量升級</td>
    <td align="center">未經壓縮的差異文件</td>
    <td align="center">（✘）</td>
</tr>
<tr>
    <td align="center">經過壓縮的差異文件</td>
    <td align="center">（✔）</td>
</tr>
</tbody>
</table>

<h2 id="升級包頭"><a href="#升級包頭" class="headerlink" title="升級包頭"></a>升級包頭</h2><p>在線升級無非就是把新程序或者更新補丁發送給設備，設備收到後進行升級的過程。</p>
<p>爲了保證升級能夠順利進行，除了新程序或者更新補丁外，我們還要向設備發送一些附加信息，這些附加信息通常被添加至升級文件的頭部。</p>
<p><img src="/sulfurandcu.io/clnyhr2n4005710rqfv00ckub/update.head.png" alt="圖片加載失敗"></p>
<p><strong>變長包頭的優勢</strong></p>
<p><img src="/sulfurandcu.io/clnyhr2n4005710rqfv00ckub/update.head.scalable.png" alt="圖片加載失敗"></p>
<div class="note info no-icon"><p>升級包頭我建議做成變長的，萬一哪天包頭長度不夠用了，擴展後也能兼容現場的老設備。</p>
</div>

<h2 id="升級文件"><a href="#升級文件" class="headerlink" title="升級文件"></a>升級文件</h2><h3 id="未經壓縮的全量升級文件結構"><a href="#未經壓縮的全量升級文件結構" class="headerlink" title="未經壓縮的全量升級文件結構"></a>未經壓縮的全量升級文件結構</h3><p><img src="/sulfurandcu.io/clnyhr2n4005710rqfv00ckub/update.file.1.raw.full.png" alt="圖片加載失敗"></p>
<h3 id="經過壓縮的全量升級文件結構"><a href="#經過壓縮的全量升級文件結構" class="headerlink" title="經過壓縮的全量升級文件結構"></a>經過壓縮的全量升級文件結構</h3><p><img src="/sulfurandcu.io/clnyhr2n4005710rqfv00ckub/update.file.2.zip.full.png" alt="圖片加載失敗"></p>
<h3 id="經過壓縮的增量升級文件結構"><a href="#經過壓縮的增量升級文件結構" class="headerlink" title="經過壓縮的增量升級文件結構"></a>經過壓縮的增量升級文件結構</h3><p><img src="/sulfurandcu.io/clnyhr2n4005710rqfv00ckub/update.file.4.zip.diff.png" alt="圖片加載失敗"></p>
<h2 id="升級方案"><a href="#升級方案" class="headerlink" title="升級方案"></a>升級方案</h2><h3 id="未經壓縮的全量升級-經過壓縮的增量升級"><a href="#未經壓縮的全量升級-經過壓縮的增量升級" class="headerlink" title="未經壓縮的全量升級 + 經過壓縮的增量升級"></a>未經壓縮的全量升級 + 經過壓縮的增量升級</h3><p><img src="/sulfurandcu.io/clnyhr2n4005710rqfv00ckub/update.plan.1.raw.full+zip.diff.png" alt="圖片加載失敗"></p>
<h3 id="經過壓縮的全量升級-經過壓縮的增量升級"><a href="#經過壓縮的全量升級-經過壓縮的增量升級" class="headerlink" title="經過壓縮的全量升級 + 經過壓縮的增量升級"></a>經過壓縮的全量升級 + 經過壓縮的增量升級</h3><p><img src="/sulfurandcu.io/clnyhr2n4005710rqfv00ckub/update.plan.2.zip.full+zip.diff.png" alt="圖片加載失敗"></p>
<h2 id="升級流程"><a href="#升級流程" class="headerlink" title="升級流程"></a>升級流程</h2><h3 id="接收升級數據"><a href="#接收升級數據" class="headerlink" title="接收升級數據"></a>接收升級數據</h3><pre class="mermaid">
flowchart TB
%%{init: { &quot;flowchart&quot;: { &quot;curve&quot;: &quot;basis&quot; } } }%%
Start(接收升級數據&lt;br&gt;開始)--&gt;DoRecv[接收數據]--&gt;IsHeadRecvDone{文件頭接收完畢}
IsHeadRecvDone--否&#x2F;繼續接收--&gt;DoRecv
IsHeadRecvDone--是--&gt;IsHeadParsed{文件頭已被處理}
IsHeadParsed--是----&gt;DoWrite[將接收到的數據寫入外存&lt;br&gt;如果爲「壓縮增量升級」則將數據寫入〈升級數據存儲區〉&lt;br&gt;如果爲「壓縮全量升級」則將數據寫入〈升級數據存儲區〉&lt;br&gt;如果爲「原版全量升級」則將數據寫入〈新版程序存儲區〉&lt;br&gt;（如果小程序爲舊版本則寫入時偏移75字節）]--&gt;IsFileRecvOver{文件傳輸完畢}
IsFileRecvOver--否&#x2F;繼續接收--&gt;DoRecv2[繼續接收數據]
IsFileRecvOver--是--&gt;DoCheck[校驗接收到的升級文件&lt;br&gt;如果爲「壓縮增量升級」則從〈升級數據存儲區〉中讀出數據並計算CRC值&lt;br&gt;如果爲「壓縮全量升級」則從〈升級數據存儲區〉中讀出數據並計算CRC值&lt;br&gt;如果爲「原版全量升級」則從〈新版程序存儲區〉中讀出數據並計算CRC值&lt;br&gt;（如果小程序爲舊版本則讀取時偏移75字節）]--&gt;IsCheckOK{校驗是否通過}
IsCheckOK--否--&gt;Over3(結束)
IsCheckOK--是--&gt;DoWriteHead[將文件頭中的某些數據寫入外存的第一個扇區&lt;br&gt;（如果小程序爲舊版本則將“新程序大小”加75字節）]--&gt;DoWriteHeadFlag[將該扇區中的升級標識從0xFFFFFFFF改成0xAABBFFFF]--&gt;IsA{增量升級}
IsA--是--&gt;DoSetA[發起增量升級任務]--&gt;Over4(結束)
IsA--否--&gt;IsB{有壓縮的&lt;br&gt;全量升級}
IsB--是--&gt;DoSetB[發起全量升級任務]--&gt;Over4(結束)
IsB--否--&gt;IsC{無壓縮的&lt;br&gt;全量升級}
IsC--是--&gt;DoSetC[發起全量升級任務]--&gt;Over4(結束)
IsC--否--&gt;Over5(結束)
IsHeadParsed--否--&gt;IsHeadOK{文件頭格式正確}
IsHeadOK--否--&gt;Over1(結束)
IsHeadOK--是--&gt;IsDiffUpdate{是否爲增量升級}
IsDiffUpdate--否&#x2F;繼續接收--&gt;DoRecv
IsDiffUpdate--是--&gt;IsCRCOK{文件頭中的舊程序CRC與&lt;br&gt;當前程序的CRC是否一致}
IsCRCOK--（當前程序中的可變字段以默認值進行處理）&lt;br&gt;&lt;br&gt;不一致--&gt;Over2(結束)
IsCRCOK--是&#x2F;繼續接收--&gt;DoRecv
</pre>

<h3 id="執行升級任務"><a href="#執行升級任務" class="headerlink" title="執行升級任務"></a>執行升級任務</h3><pre class="mermaid">
flowchart TB
%%{init: { &quot;flowchart&quot;: { &quot;curve&quot;: &quot;basis&quot; } } }%%
Start(執行升級任務&lt;br&gt;開始)--&gt;IsUpdateFlag{文件頭接收完畢}
IsUpdateFlag--否--&gt;IsUpdateFlag
IsUpdateFlag--是--&gt;DoReadHead[從外存的第一個扇區中讀取升級信息]--&gt;IsReadSucc{讀取成功}
IsReadSucc--否--&gt;Over1(結束)
IsReadSucc--是--&gt;IsUpdateFlagIsDownload{升級標識&#x3D;&#x3D;0xAABBFFFF}
IsUpdateFlagIsDownload--否--&gt;Over2(結束)
IsUpdateFlagIsDownload--是--&gt;IsUpdateTypeIsZipDiff{是否爲壓縮增量升級}
IsUpdateTypeIsZipDiff--是--&gt;DoUnDiff[執行差分還原操作]--如果小程序爲舊版本&lt;br&gt;則寫入時偏移75字節&lt;br&gt;當前程序中的可變字段以默認值進行處理---&gt;DoCheckNewAppCRC
IsUpdateTypeIsZipDiff--否--&gt;IsUpdateTypeIsZipFull{是否爲壓縮全量升級}
IsUpdateTypeIsZipFull--是--&gt;DoUnZip[執行文件解壓操作]--如果小程序爲舊版本&lt;br&gt;則寫入時偏移75字節---&gt;DoCheckNewAppCRC
IsUpdateTypeIsZipFull--否--&gt;IsUpdateTypeIsRawFull{是否爲原版全量升級}
IsUpdateTypeIsRawFull--是--&gt;DoNothing[無需執行任何操作]---&gt;DoCheckNewAppCRC[校驗新程序&lt;br&gt;對比文件頭中的新程序CRC與&lt;br&gt;新程序存儲區中的數據的CRC]
IsUpdateTypeIsRawFull--否--&gt;Over3(結束)
DoCheckNewAppCRC--如果小程序爲舊版本&lt;br&gt;則讀取時偏移75字節---&gt;IsCRCCheckOK{CRC是否一致}
IsCRCCheckOK--否--&gt;Over4(結束)
IsCRCCheckOK--是--&gt;DoChangeUpdateFlag[將外存中的升級標識從0xAABBFFFF改爲0xAABBCCDD]--&gt;IsChangeSucc{修改是否成功}
IsChangeSucc--否--&gt;Over5(結束)
IsChangeSucc--是--&gt;DoChangeInternalFlashUpdateFlag[將內部flash中的0xAABBCCDD改成0x0000CCDD]--&gt;DoReset[一秒後重啓進入引導程序]--&gt;OverX(結束)
</pre>
]]></content>
      <categories>
        <category>開發筆記</category>
      </categories>
      <tags>
        <tag>嵌入式軟件開發</tag>
        <tag>在線升級</tag>
      </tags>
  </entry>
  <entry>
    <title>嵌入式 IAP 升級功能（#06）引導程序 bootloader 升級</title>
    <url>/sulfurandcu.io/clnyhr2n5005a10rq54px6ho5.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>開發筆記</category>
      </categories>
      <tags>
        <tag>嵌入式軟件開發</tag>
        <tag>在線升級</tag>
      </tags>
  </entry>
</search>
